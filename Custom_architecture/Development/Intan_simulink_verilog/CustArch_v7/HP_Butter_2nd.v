// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v7\HP_Butter_2nd.v
// Created: 2021-05-04 15:27:11
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: HP_Butter_2nd
// Source Path: CustArch_v7/cust_architecture/process_and_retrieve/digital_filter/HP_Butter_2nd
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module HP_Butter_2nd
          (Input_rsvd,
           Input1_0,
           Input1_1,
           Output_rsvd,
           Output1);


  input   signed [15:0] Input_rsvd;  // sfix16_En4
  input   signed [15:0] Input1_0;  // sfix16_E2
  input   signed [15:0] Input1_1;  // sfix16_E2
  output  signed [15:0] Output_rsvd;  // sfix16_En5
  output  signed [15:0] Output1;  // sfix16_E2


  wire signed [32:0] s_1_mul_temp;  // sfix33_En20
  wire signed [31:0] s_1_cast;  // sfix32_En20
  wire signed [15:0] s_1_out1;  // sfix16_En4
  wire signed [15:0] t_1;  // sfix16_E2
  wire signed [31:0] a_2_1_mul_temp;  // sfix32_En12
  wire signed [31:0] a_2_1_out1;  // sfix32_En13
  wire signed [33:0] SumA21_sub_cast;  // sfix34_En15
  wire signed [34:0] SumA21_sub_cast_1;  // sfix35_En15
  wire signed [34:0] SumA21_sub_cast_2;  // sfix35_En15
  wire signed [34:0] SumA21_sub_temp;  // sfix35_En15
  wire signed [33:0] SumA21_out1;  // sfix34_En15
  wire signed [15:0] t_2;  // sfix16_E2
  wire signed [32:0] a_3_1_mul_temp;  // sfix33_En14
  wire signed [31:0] a_3_1_out1;  // sfix32_En14
  wire signed [34:0] SumA31_sub_cast;  // sfix35_En15
  wire signed [33:0] SumA31_sub_cast_1;  // sfix34_En15
  wire signed [34:0] SumA31_sub_cast_2;  // sfix35_En15
  wire signed [34:0] SumA31_sub_temp;  // sfix35_En15
  wire signed [33:0] SumA31_cast;  // sfix34_En15
  wire signed [33:0] SumA31_out1;  // sfix34_En16
  wire signed [15:0] CastState1_out1;  // sfix16_E2
  wire signed [31:0] b_2_1_mul_temp;  // sfix32_En12
  wire signed [31:0] b_2_1_1;  // sfix32
  wire signed [31:0] b_2_1_out1;  // sfix32_En13
  wire signed [33:0] SumB21_add_cast;  // sfix34_En15
  wire signed [34:0] SumB21_add_cast_1;  // sfix35_En15
  wire signed [34:0] SumB21_add_cast_2;  // sfix35_En15
  wire signed [34:0] SumB21_add_temp;  // sfix35_En15
  wire signed [33:0] SumB21_cast;  // sfix34_En15
  wire signed [33:0] SumB21_out1;  // sfix34_En16
  wire signed [34:0] SumB31_add_cast;  // sfix35_En16
  wire signed [34:0] SumB31_add_cast_1;  // sfix35_En16
  wire signed [34:0] SumB31_add_temp;  // sfix35_En16
  wire signed [33:0] SumB31_cast;  // sfix34_En16
  wire signed [33:0] SumB31_out1;  // sfix34_En23
  wire signed [15:0] ConvertOut_out1;  // sfix16_En5


  assign s_1_mul_temp = 17'sb01111010011100000 * Input_rsvd;
  assign s_1_cast = s_1_mul_temp[31:0];
  assign s_1_out1 = ((s_1_cast[31] == 1'b0) && (s_1_cast[30:16] == 15'b111111111111111) ? 16'sb0111111111111111 :
              s_1_cast[31:16] + $signed({1'b0, s_1_cast[15] & (s_1_cast[16] | (|s_1_cast[14:0]))}));



  assign t_1 = Input1_1;

  assign a_2_1_mul_temp = 16'sb1000010110101111 * t_1;
  assign a_2_1_out1 = ((a_2_1_mul_temp[31] == 1'b0) && (a_2_1_mul_temp[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp[31] == 1'b1) && (a_2_1_mul_temp[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {a_2_1_mul_temp[30:0], 1'b0}));



  assign SumA21_sub_cast = {{7{s_1_out1[15]}}, {s_1_out1, 11'b00000000000}};
  assign SumA21_sub_cast_1 = {SumA21_sub_cast[33], SumA21_sub_cast};
  assign SumA21_sub_cast_2 = {a_2_1_out1[31], {a_2_1_out1, 2'b00}};
  assign SumA21_sub_temp = SumA21_sub_cast_1 - SumA21_sub_cast_2;
  assign SumA21_out1 = ((SumA21_sub_temp[34] == 1'b0) && (SumA21_sub_temp[33] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumA21_sub_temp[34] == 1'b1) && (SumA21_sub_temp[33] != 1'b1) ? 34'sh200000000 :
              $signed(SumA21_sub_temp[33:0])));



  assign t_2 = Input1_0;

  assign a_3_1_mul_temp = 17'sb01110101000111100 * t_2;
  assign a_3_1_out1 = a_3_1_mul_temp[31:0];



  assign SumA31_sub_cast = {SumA21_out1[33], SumA21_out1};
  assign SumA31_sub_cast_1 = {a_3_1_out1[31], {a_3_1_out1, 1'b0}};
  assign SumA31_sub_cast_2 = {SumA31_sub_cast_1[33], SumA31_sub_cast_1};
  assign SumA31_sub_temp = SumA31_sub_cast - SumA31_sub_cast_2;
  assign SumA31_cast = ((SumA31_sub_temp[34] == 1'b0) && (SumA31_sub_temp[33] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumA31_sub_temp[34] == 1'b1) && (SumA31_sub_temp[33] != 1'b1) ? 34'sh200000000 :
              $signed(SumA31_sub_temp[33:0])));
  assign SumA31_out1 = ((SumA31_cast[33] == 1'b0) && (SumA31_cast[32] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumA31_cast[33] == 1'b1) && (SumA31_cast[32] != 1'b1) ? 34'sh200000000 :
              {SumA31_cast[32:0], 1'b0}));



  assign CastState1_out1 = ((SumA31_out1[33] == 1'b0) && (SumA31_out1[32:18] == 15'b111111111111111) ? 16'sb0111111111111111 :
              SumA31_out1[33:18] + $signed({1'b0, SumA31_out1[17] & (SumA31_out1[18] | (|SumA31_out1[16:0]))}));



  // CSD Encoding (32768) : 1000000000000000; Cost (Adders) = 0
  assign b_2_1_1 = {t_1[15], {t_1, 15'b000000000000000}};
  assign b_2_1_mul_temp =  - (b_2_1_1);
  assign b_2_1_out1 = ((b_2_1_mul_temp[31] == 1'b0) && (b_2_1_mul_temp[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp[31] == 1'b1) && (b_2_1_mul_temp[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {b_2_1_mul_temp[30:0], 1'b0}));



  assign SumB21_add_cast = {CastState1_out1[15], {CastState1_out1, 17'b00000000000000000}};
  assign SumB21_add_cast_1 = {SumB21_add_cast[33], SumB21_add_cast};
  assign SumB21_add_cast_2 = {b_2_1_out1[31], {b_2_1_out1, 2'b00}};
  assign SumB21_add_temp = SumB21_add_cast_1 + SumB21_add_cast_2;
  assign SumB21_cast = ((SumB21_add_temp[34] == 1'b0) && (SumB21_add_temp[33] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumB21_add_temp[34] == 1'b1) && (SumB21_add_temp[33] != 1'b1) ? 34'sh200000000 :
              $signed(SumB21_add_temp[33:0])));
  assign SumB21_out1 = ((SumB21_cast[33] == 1'b0) && (SumB21_cast[32] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumB21_cast[33] == 1'b1) && (SumB21_cast[32] != 1'b1) ? 34'sh200000000 :
              {SumB21_cast[32:0], 1'b0}));



  assign SumB31_add_cast = {SumB21_out1[33], SumB21_out1};
  assign SumB31_add_cast_1 = {t_2[15], {t_2, 18'b000000000000000000}};
  assign SumB31_add_temp = SumB31_add_cast + SumB31_add_cast_1;
  assign SumB31_cast = ((SumB31_add_temp[34] == 1'b0) && (SumB31_add_temp[33] != 1'b0) ? 34'sh1FFFFFFFF :
              ((SumB31_add_temp[34] == 1'b1) && (SumB31_add_temp[33] != 1'b1) ? 34'sh200000000 :
              $signed(SumB31_add_temp[33:0])));
  assign SumB31_out1 = ((SumB31_cast[33] == 1'b0) && (SumB31_cast[32:26] != 7'b0000000) ? 34'sh1FFFFFFFF :
              ((SumB31_cast[33] == 1'b1) && (SumB31_cast[32:26] != 7'b1111111) ? 34'sh200000000 :
              {SumB31_cast[26:0], 7'b0000000}));



  assign ConvertOut_out1 = ((SumB31_out1[33] == 1'b0) && (SumB31_out1[32:18] == 15'b111111111111111) ? 16'sb0111111111111111 :
              SumB31_out1[33:18] + $signed({1'b0, SumB31_out1[17] & (SumB31_out1[18] | (|SumB31_out1[16:0]))}));



  assign Output_rsvd = ConvertOut_out1;

  assign Output1 = CastState1_out1;

endmodule  // HP_Butter_2nd

