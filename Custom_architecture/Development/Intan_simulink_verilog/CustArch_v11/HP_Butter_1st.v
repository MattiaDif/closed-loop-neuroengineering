// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v11\HP_Butter_1st.v
// Created: 2021-06-11 11:09:07
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: HP_Butter_1st
// Source Path: CustArch_v11/cust_architecture/process_and_retrieve/one_pole_IIR/HP_Butter_1st
// Hierarchy Level: 3
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module HP_Butter_1st
          (Input2,
           Input1,
           Output_rsvd,
           Output1);


  input   signed [15:0] Input2;  // int16
  input   signed [15:0] Input1;  // sfix16_E4
  output  signed [15:0] Output_rsvd;  // sfix16_En4
  output  signed [15:0] Output1;  // sfix16_E4


  wire signed [48:0] s_1_mul_temp;  // sfix49_En32
  wire signed [47:0] s_1_cast;  // sfix48_En32
  wire signed [15:0] s_1_out1;  // int16
  wire signed [47:0] a_2_1_mul_temp;  // sfix48_En27
  wire signed [15:0] a_2_1_out1;  // sfix16_E4
  wire signed [20:0] SumA21_sub_cast;  // sfix21
  wire signed [20:0] SumA21_sub_temp;  // sfix21
  wire signed [20:0] SumA21_1;  // sfix21
  wire signed [15:0] SumA21_out1;  // sfix16_E4
  wire signed [16:0] SumB21_sub_cast;  // sfix17_E4
  wire signed [16:0] SumB21_sub_cast_1;  // sfix17_E4
  wire signed [16:0] SumB21_sub_temp;  // sfix17_E4
  wire signed [15:0] SumB21_out1;  // sfix16_En4


  assign s_1_mul_temp = 33'sh0F8333340 * Input2;
  assign s_1_cast = s_1_mul_temp[47:0];
  assign s_1_out1 = ((s_1_cast[47] == 1'b0) && (s_1_cast[46:32] == 15'b111111111111111) ? 16'sb0111111111111111 :
              s_1_cast[47:32] + $signed({1'b0, s_1_cast[31]}));



  assign a_2_1_mul_temp = 32'sb10000111110011001100110011000000 * Input1;
  assign a_2_1_out1 = (((a_2_1_mul_temp[47] == 1'b0) && (a_2_1_mul_temp[46] != 1'b0)) || ((a_2_1_mul_temp[47] == 1'b0) && (a_2_1_mul_temp[46:31] == 16'sb0111111111111111)) ? 16'sb0111111111111111 :
              ((a_2_1_mul_temp[47] == 1'b1) && (a_2_1_mul_temp[46] != 1'b1) ? 16'sb1000000000000000 :
              a_2_1_mul_temp[46:31] + $signed({1'b0, a_2_1_mul_temp[30]})));



  assign SumA21_sub_cast = {a_2_1_out1[15], {a_2_1_out1, 4'b0000}};
  assign SumA21_1 = {{5{s_1_out1[15]}}, s_1_out1};
  assign SumA21_sub_temp = SumA21_1 - SumA21_sub_cast;
  assign SumA21_out1 = (((SumA21_sub_temp[20] == 1'b0) && (SumA21_sub_temp[19] != 1'b0)) || ((SumA21_sub_temp[20] == 1'b0) && (SumA21_sub_temp[19:4] == 16'sb0111111111111111)) ? 16'sb0111111111111111 :
              ((SumA21_sub_temp[20] == 1'b1) && (SumA21_sub_temp[19] != 1'b1) ? 16'sb1000000000000000 :
              SumA21_sub_temp[19:4] + $signed({1'b0, SumA21_sub_temp[3]})));



  assign SumB21_sub_cast = {SumA21_out1[15], SumA21_out1};
  assign SumB21_sub_cast_1 = {Input1[15], Input1};
  assign SumB21_sub_temp = SumB21_sub_cast - SumB21_sub_cast_1;
  assign SumB21_out1 = ((SumB21_sub_temp[16] == 1'b0) && (SumB21_sub_temp[15:7] != 9'b000000000) ? 16'sb0111111111111111 :
              ((SumB21_sub_temp[16] == 1'b1) && (SumB21_sub_temp[15:7] != 9'b111111111) ? 16'sb1000000000000000 :
              {SumB21_sub_temp[7:0], 8'b00000000}));



  assign Output_rsvd = SumB21_out1;

  assign Output1 = SumA21_out1;

endmodule  // HP_Butter_1st

