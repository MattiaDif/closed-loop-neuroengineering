// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v15\highpass.v
// Created: 2021-06-18 11:42:55
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: highpass
// Source Path: CustArch_v15/cust_architecture/process_and_retrieve/Filter_ch1/digital_filter/highpass
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module highpass
          (clk,
           reset,
           enb,
           Input_0,
           Input_1,
           Input_2,
           Input_3,
           Input_4,
           Input_5,
           Input_6,
           Input_7,
           Enable_out2,
           Output_0,
           Output_1,
           Output_2,
           Output_3,
           Output_4,
           Output_5,
           Output_6,
           Output_7);


  input   clk;
  input   reset;
  input   enb;
  input   signed [31:0] Input_0;  // sfix32_En15
  input   signed [31:0] Input_1;  // sfix32_En15
  input   signed [31:0] Input_2;  // sfix32_En15
  input   signed [31:0] Input_3;  // sfix32_En15
  input   signed [31:0] Input_4;  // sfix32_En15
  input   signed [31:0] Input_5;  // sfix32_En15
  input   signed [31:0] Input_6;  // sfix32_En15
  input   signed [31:0] Input_7;  // sfix32_En15
  input   Enable_out2;
  output  signed [31:0] Output_0;  // sfix32_En15
  output  signed [31:0] Output_1;  // sfix32_En15
  output  signed [31:0] Output_2;  // sfix32_En15
  output  signed [31:0] Output_3;  // sfix32_En15
  output  signed [31:0] Output_4;  // sfix32_En15
  output  signed [31:0] Output_5;  // sfix32_En15
  output  signed [31:0] Output_6;  // sfix32_En15
  output  signed [31:0] Output_7;  // sfix32_En15


  wire signed [31:0] Input_rsvd [0:7];  // sfix32_En15 [8]
  wire signed [64:0] s_1_mul_temp;  // sfix65_En47
  wire signed [63:0] s_1_cast;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_1;  // sfix65_En47
  wire signed [63:0] s_1_cast_1;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_2;  // sfix65_En47
  wire signed [63:0] s_1_cast_2;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_3;  // sfix65_En47
  wire signed [63:0] s_1_cast_3;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_4;  // sfix65_En47
  wire signed [63:0] s_1_cast_4;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_5;  // sfix65_En47
  wire signed [63:0] s_1_cast_5;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_6;  // sfix65_En47
  wire signed [63:0] s_1_cast_6;  // sfix64_En47
  wire signed [64:0] s_1_mul_temp_7;  // sfix65_En47
  wire signed [63:0] s_1_cast_7;  // sfix64_En47
  wire signed [31:0] s_1_out1 [0:7];  // sfix32_En16 [8]
  wire enb_gated;
  wire enb_gated_1;
  wire signed [31:0] Delay1_out1 [0:7];  // sfix32_En7 [8]
  wire signed [31:0] Delay_out1_0;  // sfix32_En7
  wire signed [31:0] Delay_out1_1;  // sfix32_En7
  wire signed [31:0] Delay_out1_2;  // sfix32_En7
  wire signed [31:0] Delay_out1_3;  // sfix32_En7
  wire signed [31:0] Delay_out1_4;  // sfix32_En7
  wire signed [31:0] Delay_out1_5;  // sfix32_En7
  wire signed [31:0] Delay_out1_6;  // sfix32_En7
  wire signed [31:0] Delay_out1_7;  // sfix32_En7
  wire signed [31:0] Delay_out1 [0:7];  // sfix32_En7 [8]
  reg signed [31:0] Delay1_reg [0:7];  // sfix32 [8]
  wire signed [31:0] Delay1_reg_next [0:7];  // sfix32_En7 [8]
  wire signed [31:0] Delay1_out1_1 [0:7];  // sfix32_En7 [8]
  wire signed [64:0] a_3_1_mul_temp;  // sfix65_En39
  wire signed [63:0] a_3_1_cast;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_1;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_1;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_2;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_2;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_3;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_3;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_4;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_4;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_5;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_5;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_6;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_6;  // sfix64_En39
  wire signed [64:0] a_3_1_mul_temp_7;  // sfix65_En39
  wire signed [63:0] a_3_1_cast_7;  // sfix64_En39
  wire signed [31:0] a_3_1_out1 [0:7];  // sfix32_En8 [8]
  wire signed [31:0] Delay_out1_8 [0:7];  // sfix32_En7 [8]
  wire signed [31:0] SumA31_out1 [0:7];  // sfix32_En7 [8]
  wire signed [31:0] SumA31_out1_1 [0:7];  // sfix32_En7 [8]
  reg signed [31:0] Delay_reg [0:7];  // sfix32 [8]
  wire signed [31:0] Delay_reg_next [0:7];  // sfix32_En7 [8]
  wire signed [31:0] Delay_out1_9 [0:7];  // sfix32_En7 [8]
  wire signed [63:0] a_2_1_mul_temp;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_1;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_2;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_3;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_4;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_5;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_6;  // sfix64_En37
  wire signed [63:0] a_2_1_mul_temp_7;  // sfix64_En37
  wire signed [31:0] a_2_1_out1 [0:7];  // sfix32_En6 [8]
  wire signed [31:0] SumA21_sub_cast;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_1;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_2;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_3;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_4;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_5;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_1;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_6;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_7;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_8;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_2;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_9;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_10;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_11;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_3;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_12;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_13;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_14;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_4;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_15;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_16;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_17;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_5;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_18;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_19;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_20;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_6;  // sfix33_En6
  wire signed [31:0] SumA21_sub_cast_21;  // sfix32_En6
  wire signed [32:0] SumA21_sub_cast_22;  // sfix33_En6
  wire signed [32:0] SumA21_sub_cast_23;  // sfix33_En6
  wire signed [32:0] SumA21_sub_temp_7;  // sfix33_En6
  wire signed [31:0] SumA21_out1 [0:7];  // sfix32_En6 [8]
  wire signed [32:0] SumA31_sub_cast;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_1;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_2;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp;  // sfix33_En6
  wire signed [31:0] SumA31_cast;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_3;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_4;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_5;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_1;  // sfix33_En6
  wire signed [31:0] SumA31_cast_1;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_6;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_7;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_8;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_2;  // sfix33_En6
  wire signed [31:0] SumA31_cast_2;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_9;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_10;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_11;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_3;  // sfix33_En6
  wire signed [31:0] SumA31_cast_3;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_12;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_13;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_14;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_4;  // sfix33_En6
  wire signed [31:0] SumA31_cast_4;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_15;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_16;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_17;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_5;  // sfix33_En6
  wire signed [31:0] SumA31_cast_5;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_18;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_19;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_20;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_6;  // sfix33_En6
  wire signed [31:0] SumA31_cast_6;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_21;  // sfix33_En6
  wire signed [31:0] SumA31_sub_cast_22;  // sfix32_En6
  wire signed [32:0] SumA31_sub_cast_23;  // sfix33_En6
  wire signed [32:0] SumA31_sub_temp_7;  // sfix33_En6
  wire signed [31:0] SumA31_cast_7;  // sfix32_En6
  wire signed [63:0] b_2_1_mul_temp;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_1;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_2;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_3;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_4;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_5;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_6;  // sfix64_En37
  wire signed [63:0] b_2_1_mul_temp_7;  // sfix64_En37
  wire signed [62:0] b_2_1_1;  // sfix63
  wire signed [63:0] b_2_1_2;  // sfix64
  wire signed [62:0] b_2_1_3;  // sfix63
  wire signed [63:0] b_2_1_4;  // sfix64
  wire signed [62:0] b_2_1_5;  // sfix63
  wire signed [63:0] b_2_1_6;  // sfix64
  wire signed [62:0] b_2_1_7;  // sfix63
  wire signed [63:0] b_2_1_8;  // sfix64
  wire signed [62:0] b_2_1_9;  // sfix63
  wire signed [63:0] b_2_1_10;  // sfix64
  wire signed [62:0] b_2_1_11;  // sfix63
  wire signed [63:0] b_2_1_12;  // sfix64
  wire signed [62:0] b_2_1_13;  // sfix63
  wire signed [63:0] b_2_1_14;  // sfix64
  wire signed [62:0] b_2_1_15;  // sfix63
  wire signed [63:0] b_2_1_16;  // sfix64
  wire signed [31:0] b_2_1_out1 [0:7];  // sfix32_En6 [8]
  wire signed [31:0] SumB21_add_cast;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_1;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_2;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp;  // sfix33_En6
  wire signed [31:0] SumB21_cast;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_3;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_4;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_5;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_1;  // sfix33_En6
  wire signed [31:0] SumB21_cast_1;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_6;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_7;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_8;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_2;  // sfix33_En6
  wire signed [31:0] SumB21_cast_2;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_9;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_10;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_11;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_3;  // sfix33_En6
  wire signed [31:0] SumB21_cast_3;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_12;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_13;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_14;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_4;  // sfix33_En6
  wire signed [31:0] SumB21_cast_4;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_15;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_16;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_17;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_5;  // sfix33_En6
  wire signed [31:0] SumB21_cast_5;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_18;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_19;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_20;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_6;  // sfix33_En6
  wire signed [31:0] SumB21_cast_6;  // sfix32_En6
  wire signed [31:0] SumB21_add_cast_21;  // sfix32_En6
  wire signed [32:0] SumB21_add_cast_22;  // sfix33_En6
  wire signed [32:0] SumB21_add_cast_23;  // sfix33_En6
  wire signed [32:0] SumB21_add_temp_7;  // sfix33_En6
  wire signed [31:0] SumB21_cast_7;  // sfix32_En6
  wire signed [31:0] SumB21_out1 [0:7];  // sfix32_En7 [8]
  wire signed [32:0] SumB31_add_cast;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_1;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp;  // sfix33_En7
  wire signed [31:0] SumB31_cast;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_2;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_3;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_1;  // sfix33_En7
  wire signed [31:0] SumB31_cast_1;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_4;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_5;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_2;  // sfix33_En7
  wire signed [31:0] SumB31_cast_2;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_6;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_7;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_3;  // sfix33_En7
  wire signed [31:0] SumB31_cast_3;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_8;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_9;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_4;  // sfix33_En7
  wire signed [31:0] SumB31_cast_4;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_10;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_11;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_5;  // sfix33_En7
  wire signed [31:0] SumB31_cast_5;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_12;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_13;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_6;  // sfix33_En7
  wire signed [31:0] SumB31_cast_6;  // sfix32_En7
  wire signed [32:0] SumB31_add_cast_14;  // sfix33_En7
  wire signed [32:0] SumB31_add_cast_15;  // sfix33_En7
  wire signed [32:0] SumB31_add_temp_7;  // sfix33_En7
  wire signed [31:0] SumB31_cast_7;  // sfix32_En7
  wire signed [31:0] SumB31_out1 [0:7];  // sfix32_En15 [8]


  assign Input_rsvd[0] = Input_0;
  assign Input_rsvd[1] = Input_1;
  assign Input_rsvd[2] = Input_2;
  assign Input_rsvd[3] = Input_3;
  assign Input_rsvd[4] = Input_4;
  assign Input_rsvd[5] = Input_5;
  assign Input_rsvd[6] = Input_6;
  assign Input_rsvd[7] = Input_7;

  assign s_1_mul_temp = 33'sh0F4E0044F * Input_rsvd[0];
  assign s_1_cast = s_1_mul_temp[63:0];
  assign s_1_out1[0] = (((s_1_cast[63] == 1'b0) && (s_1_cast[62] != 1'b0)) || ((s_1_cast[63] == 1'b0) && (s_1_cast[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast[63] == 1'b1) && (s_1_cast[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast[62:31] + $signed({1'b0, s_1_cast[30]})));
  assign s_1_mul_temp_1 = 33'sh0F4E0044F * Input_rsvd[1];
  assign s_1_cast_1 = s_1_mul_temp_1[63:0];
  assign s_1_out1[1] = (((s_1_cast_1[63] == 1'b0) && (s_1_cast_1[62] != 1'b0)) || ((s_1_cast_1[63] == 1'b0) && (s_1_cast_1[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_1[63] == 1'b1) && (s_1_cast_1[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_1[62:31] + $signed({1'b0, s_1_cast_1[30]})));
  assign s_1_mul_temp_2 = 33'sh0F4E0044F * Input_rsvd[2];
  assign s_1_cast_2 = s_1_mul_temp_2[63:0];
  assign s_1_out1[2] = (((s_1_cast_2[63] == 1'b0) && (s_1_cast_2[62] != 1'b0)) || ((s_1_cast_2[63] == 1'b0) && (s_1_cast_2[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_2[63] == 1'b1) && (s_1_cast_2[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_2[62:31] + $signed({1'b0, s_1_cast_2[30]})));
  assign s_1_mul_temp_3 = 33'sh0F4E0044F * Input_rsvd[3];
  assign s_1_cast_3 = s_1_mul_temp_3[63:0];
  assign s_1_out1[3] = (((s_1_cast_3[63] == 1'b0) && (s_1_cast_3[62] != 1'b0)) || ((s_1_cast_3[63] == 1'b0) && (s_1_cast_3[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_3[63] == 1'b1) && (s_1_cast_3[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_3[62:31] + $signed({1'b0, s_1_cast_3[30]})));
  assign s_1_mul_temp_4 = 33'sh0F4E0044F * Input_rsvd[4];
  assign s_1_cast_4 = s_1_mul_temp_4[63:0];
  assign s_1_out1[4] = (((s_1_cast_4[63] == 1'b0) && (s_1_cast_4[62] != 1'b0)) || ((s_1_cast_4[63] == 1'b0) && (s_1_cast_4[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_4[63] == 1'b1) && (s_1_cast_4[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_4[62:31] + $signed({1'b0, s_1_cast_4[30]})));
  assign s_1_mul_temp_5 = 33'sh0F4E0044F * Input_rsvd[5];
  assign s_1_cast_5 = s_1_mul_temp_5[63:0];
  assign s_1_out1[5] = (((s_1_cast_5[63] == 1'b0) && (s_1_cast_5[62] != 1'b0)) || ((s_1_cast_5[63] == 1'b0) && (s_1_cast_5[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_5[63] == 1'b1) && (s_1_cast_5[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_5[62:31] + $signed({1'b0, s_1_cast_5[30]})));
  assign s_1_mul_temp_6 = 33'sh0F4E0044F * Input_rsvd[6];
  assign s_1_cast_6 = s_1_mul_temp_6[63:0];
  assign s_1_out1[6] = (((s_1_cast_6[63] == 1'b0) && (s_1_cast_6[62] != 1'b0)) || ((s_1_cast_6[63] == 1'b0) && (s_1_cast_6[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_6[63] == 1'b1) && (s_1_cast_6[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_6[62:31] + $signed({1'b0, s_1_cast_6[30]})));
  assign s_1_mul_temp_7 = 33'sh0F4E0044F * Input_rsvd[7];
  assign s_1_cast_7 = s_1_mul_temp_7[63:0];
  assign s_1_out1[7] = (((s_1_cast_7[63] == 1'b0) && (s_1_cast_7[62] != 1'b0)) || ((s_1_cast_7[63] == 1'b0) && (s_1_cast_7[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((s_1_cast_7[63] == 1'b1) && (s_1_cast_7[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              s_1_cast_7[62:31] + $signed({1'b0, s_1_cast_7[30]})));



  assign enb_gated = Enable_out2 && enb;

  assign enb_gated_1 = Enable_out2 && enb;

  assign Delay_out1[0] = Delay_out1_0;
  assign Delay_out1[1] = Delay_out1_1;
  assign Delay_out1[2] = Delay_out1_2;
  assign Delay_out1[3] = Delay_out1_3;
  assign Delay_out1[4] = Delay_out1_4;
  assign Delay_out1[5] = Delay_out1_5;
  assign Delay_out1[6] = Delay_out1_6;
  assign Delay_out1[7] = Delay_out1_7;

  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_reg[0] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[1] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[2] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[3] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[4] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[5] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[6] <= 32'sb00000000000000000000000000000000;
        Delay1_reg[7] <= 32'sb00000000000000000000000000000000;
      end
      else begin
        if (enb_gated_1) begin
          Delay1_reg[0] <= Delay1_reg_next[0];
          Delay1_reg[1] <= Delay1_reg_next[1];
          Delay1_reg[2] <= Delay1_reg_next[2];
          Delay1_reg[3] <= Delay1_reg_next[3];
          Delay1_reg[4] <= Delay1_reg_next[4];
          Delay1_reg[5] <= Delay1_reg_next[5];
          Delay1_reg[6] <= Delay1_reg_next[6];
          Delay1_reg[7] <= Delay1_reg_next[7];
        end
      end
    end

  assign Delay1_out1[0] = Delay1_reg[0];
  assign Delay1_out1[1] = Delay1_reg[1];
  assign Delay1_out1[2] = Delay1_reg[2];
  assign Delay1_out1[3] = Delay1_reg[3];
  assign Delay1_out1[4] = Delay1_reg[4];
  assign Delay1_out1[5] = Delay1_reg[5];
  assign Delay1_out1[6] = Delay1_reg[6];
  assign Delay1_out1[7] = Delay1_reg[7];
  assign Delay1_reg_next[0] = Delay_out1[0];
  assign Delay1_reg_next[1] = Delay_out1[1];
  assign Delay1_reg_next[2] = Delay_out1[2];
  assign Delay1_reg_next[3] = Delay_out1[3];
  assign Delay1_reg_next[4] = Delay_out1[4];
  assign Delay1_reg_next[5] = Delay_out1[5];
  assign Delay1_reg_next[6] = Delay_out1[6];
  assign Delay1_reg_next[7] = Delay_out1[7];



  assign Delay1_out1_1[0] = Delay1_out1[0];
  assign Delay1_out1_1[1] = Delay1_out1[1];
  assign Delay1_out1_1[2] = Delay1_out1[2];
  assign Delay1_out1_1[3] = Delay1_out1[3];
  assign Delay1_out1_1[4] = Delay1_out1[4];
  assign Delay1_out1_1[5] = Delay1_out1[5];
  assign Delay1_out1_1[6] = Delay1_out1[6];
  assign Delay1_out1_1[7] = Delay1_out1[7];

  assign a_3_1_mul_temp = 33'sh0EA3BDB37 * Delay1_out1_1[0];
  assign a_3_1_cast = a_3_1_mul_temp[63:0];
  assign a_3_1_out1[0] = (((a_3_1_cast[63] == 1'b0) && (a_3_1_cast[62] != 1'b0)) || ((a_3_1_cast[63] == 1'b0) && (a_3_1_cast[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast[63] == 1'b1) && (a_3_1_cast[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast[62:31] + $signed({1'b0, a_3_1_cast[30]})));
  assign a_3_1_mul_temp_1 = 33'sh0EA3BDB37 * Delay1_out1_1[1];
  assign a_3_1_cast_1 = a_3_1_mul_temp_1[63:0];
  assign a_3_1_out1[1] = (((a_3_1_cast_1[63] == 1'b0) && (a_3_1_cast_1[62] != 1'b0)) || ((a_3_1_cast_1[63] == 1'b0) && (a_3_1_cast_1[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_1[63] == 1'b1) && (a_3_1_cast_1[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_1[62:31] + $signed({1'b0, a_3_1_cast_1[30]})));
  assign a_3_1_mul_temp_2 = 33'sh0EA3BDB37 * Delay1_out1_1[2];
  assign a_3_1_cast_2 = a_3_1_mul_temp_2[63:0];
  assign a_3_1_out1[2] = (((a_3_1_cast_2[63] == 1'b0) && (a_3_1_cast_2[62] != 1'b0)) || ((a_3_1_cast_2[63] == 1'b0) && (a_3_1_cast_2[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_2[63] == 1'b1) && (a_3_1_cast_2[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_2[62:31] + $signed({1'b0, a_3_1_cast_2[30]})));
  assign a_3_1_mul_temp_3 = 33'sh0EA3BDB37 * Delay1_out1_1[3];
  assign a_3_1_cast_3 = a_3_1_mul_temp_3[63:0];
  assign a_3_1_out1[3] = (((a_3_1_cast_3[63] == 1'b0) && (a_3_1_cast_3[62] != 1'b0)) || ((a_3_1_cast_3[63] == 1'b0) && (a_3_1_cast_3[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_3[63] == 1'b1) && (a_3_1_cast_3[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_3[62:31] + $signed({1'b0, a_3_1_cast_3[30]})));
  assign a_3_1_mul_temp_4 = 33'sh0EA3BDB37 * Delay1_out1_1[4];
  assign a_3_1_cast_4 = a_3_1_mul_temp_4[63:0];
  assign a_3_1_out1[4] = (((a_3_1_cast_4[63] == 1'b0) && (a_3_1_cast_4[62] != 1'b0)) || ((a_3_1_cast_4[63] == 1'b0) && (a_3_1_cast_4[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_4[63] == 1'b1) && (a_3_1_cast_4[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_4[62:31] + $signed({1'b0, a_3_1_cast_4[30]})));
  assign a_3_1_mul_temp_5 = 33'sh0EA3BDB37 * Delay1_out1_1[5];
  assign a_3_1_cast_5 = a_3_1_mul_temp_5[63:0];
  assign a_3_1_out1[5] = (((a_3_1_cast_5[63] == 1'b0) && (a_3_1_cast_5[62] != 1'b0)) || ((a_3_1_cast_5[63] == 1'b0) && (a_3_1_cast_5[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_5[63] == 1'b1) && (a_3_1_cast_5[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_5[62:31] + $signed({1'b0, a_3_1_cast_5[30]})));
  assign a_3_1_mul_temp_6 = 33'sh0EA3BDB37 * Delay1_out1_1[6];
  assign a_3_1_cast_6 = a_3_1_mul_temp_6[63:0];
  assign a_3_1_out1[6] = (((a_3_1_cast_6[63] == 1'b0) && (a_3_1_cast_6[62] != 1'b0)) || ((a_3_1_cast_6[63] == 1'b0) && (a_3_1_cast_6[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_6[63] == 1'b1) && (a_3_1_cast_6[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_6[62:31] + $signed({1'b0, a_3_1_cast_6[30]})));
  assign a_3_1_mul_temp_7 = 33'sh0EA3BDB37 * Delay1_out1_1[7];
  assign a_3_1_cast_7 = a_3_1_mul_temp_7[63:0];
  assign a_3_1_out1[7] = (((a_3_1_cast_7[63] == 1'b0) && (a_3_1_cast_7[62] != 1'b0)) || ((a_3_1_cast_7[63] == 1'b0) && (a_3_1_cast_7[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_3_1_cast_7[63] == 1'b1) && (a_3_1_cast_7[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_3_1_cast_7[62:31] + $signed({1'b0, a_3_1_cast_7[30]})));



  assign Delay_out1_7 = Delay_out1_8[7];

  assign Delay_out1_6 = Delay_out1_8[6];

  assign Delay_out1_5 = Delay_out1_8[5];

  assign Delay_out1_4 = Delay_out1_8[4];

  assign Delay_out1_3 = Delay_out1_8[3];

  assign Delay_out1_2 = Delay_out1_8[2];

  assign Delay_out1_1 = Delay_out1_8[1];

  assign SumA31_out1_1[0] = SumA31_out1[0];
  assign SumA31_out1_1[1] = SumA31_out1[1];
  assign SumA31_out1_1[2] = SumA31_out1[2];
  assign SumA31_out1_1[3] = SumA31_out1[3];
  assign SumA31_out1_1[4] = SumA31_out1[4];
  assign SumA31_out1_1[5] = SumA31_out1[5];
  assign SumA31_out1_1[6] = SumA31_out1[6];
  assign SumA31_out1_1[7] = SumA31_out1[7];

  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_reg[0] <= 32'sb00000000000000000000000000000000;
        Delay_reg[1] <= 32'sb00000000000000000000000000000000;
        Delay_reg[2] <= 32'sb00000000000000000000000000000000;
        Delay_reg[3] <= 32'sb00000000000000000000000000000000;
        Delay_reg[4] <= 32'sb00000000000000000000000000000000;
        Delay_reg[5] <= 32'sb00000000000000000000000000000000;
        Delay_reg[6] <= 32'sb00000000000000000000000000000000;
        Delay_reg[7] <= 32'sb00000000000000000000000000000000;
      end
      else begin
        if (enb_gated) begin
          Delay_reg[0] <= Delay_reg_next[0];
          Delay_reg[1] <= Delay_reg_next[1];
          Delay_reg[2] <= Delay_reg_next[2];
          Delay_reg[3] <= Delay_reg_next[3];
          Delay_reg[4] <= Delay_reg_next[4];
          Delay_reg[5] <= Delay_reg_next[5];
          Delay_reg[6] <= Delay_reg_next[6];
          Delay_reg[7] <= Delay_reg_next[7];
        end
      end
    end

  assign Delay_out1_8[0] = Delay_reg[0];
  assign Delay_out1_8[1] = Delay_reg[1];
  assign Delay_out1_8[2] = Delay_reg[2];
  assign Delay_out1_8[3] = Delay_reg[3];
  assign Delay_out1_8[4] = Delay_reg[4];
  assign Delay_out1_8[5] = Delay_reg[5];
  assign Delay_out1_8[6] = Delay_reg[6];
  assign Delay_out1_8[7] = Delay_reg[7];
  assign Delay_reg_next[0] = SumA31_out1_1[0];
  assign Delay_reg_next[1] = SumA31_out1_1[1];
  assign Delay_reg_next[2] = SumA31_out1_1[2];
  assign Delay_reg_next[3] = SumA31_out1_1[3];
  assign Delay_reg_next[4] = SumA31_out1_1[4];
  assign Delay_reg_next[5] = SumA31_out1_1[5];
  assign Delay_reg_next[6] = SumA31_out1_1[6];
  assign Delay_reg_next[7] = SumA31_out1_1[7];



  assign Delay_out1_0 = Delay_out1_8[0];

  assign Delay_out1_9[0] = Delay_out1_0;
  assign Delay_out1_9[1] = Delay_out1_1;
  assign Delay_out1_9[2] = Delay_out1_2;
  assign Delay_out1_9[3] = Delay_out1_3;
  assign Delay_out1_9[4] = Delay_out1_4;
  assign Delay_out1_9[5] = Delay_out1_5;
  assign Delay_out1_9[6] = Delay_out1_6;
  assign Delay_out1_9[7] = Delay_out1_7;

  assign a_2_1_mul_temp = 32'sb10000101101011101111001001111111 * Delay_out1_9[0];
  assign a_2_1_out1[0] = (((a_2_1_mul_temp[63] == 1'b0) && (a_2_1_mul_temp[62] != 1'b0)) || ((a_2_1_mul_temp[63] == 1'b0) && (a_2_1_mul_temp[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp[63] == 1'b1) && (a_2_1_mul_temp[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp[62:31] + $signed({1'b0, a_2_1_mul_temp[30]})));
  assign a_2_1_mul_temp_1 = 32'sb10000101101011101111001001111111 * Delay_out1_9[1];
  assign a_2_1_out1[1] = (((a_2_1_mul_temp_1[63] == 1'b0) && (a_2_1_mul_temp_1[62] != 1'b0)) || ((a_2_1_mul_temp_1[63] == 1'b0) && (a_2_1_mul_temp_1[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_1[63] == 1'b1) && (a_2_1_mul_temp_1[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_1[62:31] + $signed({1'b0, a_2_1_mul_temp_1[30]})));
  assign a_2_1_mul_temp_2 = 32'sb10000101101011101111001001111111 * Delay_out1_9[2];
  assign a_2_1_out1[2] = (((a_2_1_mul_temp_2[63] == 1'b0) && (a_2_1_mul_temp_2[62] != 1'b0)) || ((a_2_1_mul_temp_2[63] == 1'b0) && (a_2_1_mul_temp_2[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_2[63] == 1'b1) && (a_2_1_mul_temp_2[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_2[62:31] + $signed({1'b0, a_2_1_mul_temp_2[30]})));
  assign a_2_1_mul_temp_3 = 32'sb10000101101011101111001001111111 * Delay_out1_9[3];
  assign a_2_1_out1[3] = (((a_2_1_mul_temp_3[63] == 1'b0) && (a_2_1_mul_temp_3[62] != 1'b0)) || ((a_2_1_mul_temp_3[63] == 1'b0) && (a_2_1_mul_temp_3[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_3[63] == 1'b1) && (a_2_1_mul_temp_3[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_3[62:31] + $signed({1'b0, a_2_1_mul_temp_3[30]})));
  assign a_2_1_mul_temp_4 = 32'sb10000101101011101111001001111111 * Delay_out1_9[4];
  assign a_2_1_out1[4] = (((a_2_1_mul_temp_4[63] == 1'b0) && (a_2_1_mul_temp_4[62] != 1'b0)) || ((a_2_1_mul_temp_4[63] == 1'b0) && (a_2_1_mul_temp_4[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_4[63] == 1'b1) && (a_2_1_mul_temp_4[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_4[62:31] + $signed({1'b0, a_2_1_mul_temp_4[30]})));
  assign a_2_1_mul_temp_5 = 32'sb10000101101011101111001001111111 * Delay_out1_9[5];
  assign a_2_1_out1[5] = (((a_2_1_mul_temp_5[63] == 1'b0) && (a_2_1_mul_temp_5[62] != 1'b0)) || ((a_2_1_mul_temp_5[63] == 1'b0) && (a_2_1_mul_temp_5[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_5[63] == 1'b1) && (a_2_1_mul_temp_5[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_5[62:31] + $signed({1'b0, a_2_1_mul_temp_5[30]})));
  assign a_2_1_mul_temp_6 = 32'sb10000101101011101111001001111111 * Delay_out1_9[6];
  assign a_2_1_out1[6] = (((a_2_1_mul_temp_6[63] == 1'b0) && (a_2_1_mul_temp_6[62] != 1'b0)) || ((a_2_1_mul_temp_6[63] == 1'b0) && (a_2_1_mul_temp_6[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_6[63] == 1'b1) && (a_2_1_mul_temp_6[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_6[62:31] + $signed({1'b0, a_2_1_mul_temp_6[30]})));
  assign a_2_1_mul_temp_7 = 32'sb10000101101011101111001001111111 * Delay_out1_9[7];
  assign a_2_1_out1[7] = (((a_2_1_mul_temp_7[63] == 1'b0) && (a_2_1_mul_temp_7[62] != 1'b0)) || ((a_2_1_mul_temp_7[63] == 1'b0) && (a_2_1_mul_temp_7[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((a_2_1_mul_temp_7[63] == 1'b1) && (a_2_1_mul_temp_7[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              a_2_1_mul_temp_7[62:31] + $signed({1'b0, a_2_1_mul_temp_7[30]})));



  assign SumA21_sub_cast = ({{10{s_1_out1[0][31]}}, s_1_out1[0][31:10]}) + $signed({1'b0, s_1_out1[0][9]});
  assign SumA21_sub_cast_1 = {SumA21_sub_cast[31], SumA21_sub_cast};
  assign SumA21_sub_cast_2 = {a_2_1_out1[0][31], a_2_1_out1[0]};
  assign SumA21_sub_temp = SumA21_sub_cast_1 - SumA21_sub_cast_2;
  assign SumA21_out1[0] = ((SumA21_sub_temp[32] == 1'b0) && (SumA21_sub_temp[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp[32] == 1'b1) && (SumA21_sub_temp[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp[31:0])));
  assign SumA21_sub_cast_3 = ({{10{s_1_out1[1][31]}}, s_1_out1[1][31:10]}) + $signed({1'b0, s_1_out1[1][9]});
  assign SumA21_sub_cast_4 = {SumA21_sub_cast_3[31], SumA21_sub_cast_3};
  assign SumA21_sub_cast_5 = {a_2_1_out1[1][31], a_2_1_out1[1]};
  assign SumA21_sub_temp_1 = SumA21_sub_cast_4 - SumA21_sub_cast_5;
  assign SumA21_out1[1] = ((SumA21_sub_temp_1[32] == 1'b0) && (SumA21_sub_temp_1[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_1[32] == 1'b1) && (SumA21_sub_temp_1[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_1[31:0])));
  assign SumA21_sub_cast_6 = ({{10{s_1_out1[2][31]}}, s_1_out1[2][31:10]}) + $signed({1'b0, s_1_out1[2][9]});
  assign SumA21_sub_cast_7 = {SumA21_sub_cast_6[31], SumA21_sub_cast_6};
  assign SumA21_sub_cast_8 = {a_2_1_out1[2][31], a_2_1_out1[2]};
  assign SumA21_sub_temp_2 = SumA21_sub_cast_7 - SumA21_sub_cast_8;
  assign SumA21_out1[2] = ((SumA21_sub_temp_2[32] == 1'b0) && (SumA21_sub_temp_2[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_2[32] == 1'b1) && (SumA21_sub_temp_2[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_2[31:0])));
  assign SumA21_sub_cast_9 = ({{10{s_1_out1[3][31]}}, s_1_out1[3][31:10]}) + $signed({1'b0, s_1_out1[3][9]});
  assign SumA21_sub_cast_10 = {SumA21_sub_cast_9[31], SumA21_sub_cast_9};
  assign SumA21_sub_cast_11 = {a_2_1_out1[3][31], a_2_1_out1[3]};
  assign SumA21_sub_temp_3 = SumA21_sub_cast_10 - SumA21_sub_cast_11;
  assign SumA21_out1[3] = ((SumA21_sub_temp_3[32] == 1'b0) && (SumA21_sub_temp_3[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_3[32] == 1'b1) && (SumA21_sub_temp_3[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_3[31:0])));
  assign SumA21_sub_cast_12 = ({{10{s_1_out1[4][31]}}, s_1_out1[4][31:10]}) + $signed({1'b0, s_1_out1[4][9]});
  assign SumA21_sub_cast_13 = {SumA21_sub_cast_12[31], SumA21_sub_cast_12};
  assign SumA21_sub_cast_14 = {a_2_1_out1[4][31], a_2_1_out1[4]};
  assign SumA21_sub_temp_4 = SumA21_sub_cast_13 - SumA21_sub_cast_14;
  assign SumA21_out1[4] = ((SumA21_sub_temp_4[32] == 1'b0) && (SumA21_sub_temp_4[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_4[32] == 1'b1) && (SumA21_sub_temp_4[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_4[31:0])));
  assign SumA21_sub_cast_15 = ({{10{s_1_out1[5][31]}}, s_1_out1[5][31:10]}) + $signed({1'b0, s_1_out1[5][9]});
  assign SumA21_sub_cast_16 = {SumA21_sub_cast_15[31], SumA21_sub_cast_15};
  assign SumA21_sub_cast_17 = {a_2_1_out1[5][31], a_2_1_out1[5]};
  assign SumA21_sub_temp_5 = SumA21_sub_cast_16 - SumA21_sub_cast_17;
  assign SumA21_out1[5] = ((SumA21_sub_temp_5[32] == 1'b0) && (SumA21_sub_temp_5[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_5[32] == 1'b1) && (SumA21_sub_temp_5[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_5[31:0])));
  assign SumA21_sub_cast_18 = ({{10{s_1_out1[6][31]}}, s_1_out1[6][31:10]}) + $signed({1'b0, s_1_out1[6][9]});
  assign SumA21_sub_cast_19 = {SumA21_sub_cast_18[31], SumA21_sub_cast_18};
  assign SumA21_sub_cast_20 = {a_2_1_out1[6][31], a_2_1_out1[6]};
  assign SumA21_sub_temp_6 = SumA21_sub_cast_19 - SumA21_sub_cast_20;
  assign SumA21_out1[6] = ((SumA21_sub_temp_6[32] == 1'b0) && (SumA21_sub_temp_6[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_6[32] == 1'b1) && (SumA21_sub_temp_6[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_6[31:0])));
  assign SumA21_sub_cast_21 = ({{10{s_1_out1[7][31]}}, s_1_out1[7][31:10]}) + $signed({1'b0, s_1_out1[7][9]});
  assign SumA21_sub_cast_22 = {SumA21_sub_cast_21[31], SumA21_sub_cast_21};
  assign SumA21_sub_cast_23 = {a_2_1_out1[7][31], a_2_1_out1[7]};
  assign SumA21_sub_temp_7 = SumA21_sub_cast_22 - SumA21_sub_cast_23;
  assign SumA21_out1[7] = ((SumA21_sub_temp_7[32] == 1'b0) && (SumA21_sub_temp_7[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA21_sub_temp_7[32] == 1'b1) && (SumA21_sub_temp_7[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA21_sub_temp_7[31:0])));



  assign SumA31_sub_cast = {SumA21_out1[0][31], SumA21_out1[0]};
  assign SumA31_sub_cast_1 = ({{2{a_3_1_out1[0][31]}}, a_3_1_out1[0][31:2]}) + $signed({1'b0, a_3_1_out1[0][1]});
  assign SumA31_sub_cast_2 = {SumA31_sub_cast_1[31], SumA31_sub_cast_1};
  assign SumA31_sub_temp = SumA31_sub_cast - SumA31_sub_cast_2;
  assign SumA31_cast = ((SumA31_sub_temp[32] == 1'b0) && (SumA31_sub_temp[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp[32] == 1'b1) && (SumA31_sub_temp[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp[31:0])));
  assign SumA31_out1[0] = ((SumA31_cast[31] == 1'b0) && (SumA31_cast[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast[31] == 1'b1) && (SumA31_cast[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast[30:0], 1'b0}));
  assign SumA31_sub_cast_3 = {SumA21_out1[1][31], SumA21_out1[1]};
  assign SumA31_sub_cast_4 = ({{2{a_3_1_out1[1][31]}}, a_3_1_out1[1][31:2]}) + $signed({1'b0, a_3_1_out1[1][1]});
  assign SumA31_sub_cast_5 = {SumA31_sub_cast_4[31], SumA31_sub_cast_4};
  assign SumA31_sub_temp_1 = SumA31_sub_cast_3 - SumA31_sub_cast_5;
  assign SumA31_cast_1 = ((SumA31_sub_temp_1[32] == 1'b0) && (SumA31_sub_temp_1[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_1[32] == 1'b1) && (SumA31_sub_temp_1[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_1[31:0])));
  assign SumA31_out1[1] = ((SumA31_cast_1[31] == 1'b0) && (SumA31_cast_1[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_1[31] == 1'b1) && (SumA31_cast_1[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_1[30:0], 1'b0}));
  assign SumA31_sub_cast_6 = {SumA21_out1[2][31], SumA21_out1[2]};
  assign SumA31_sub_cast_7 = ({{2{a_3_1_out1[2][31]}}, a_3_1_out1[2][31:2]}) + $signed({1'b0, a_3_1_out1[2][1]});
  assign SumA31_sub_cast_8 = {SumA31_sub_cast_7[31], SumA31_sub_cast_7};
  assign SumA31_sub_temp_2 = SumA31_sub_cast_6 - SumA31_sub_cast_8;
  assign SumA31_cast_2 = ((SumA31_sub_temp_2[32] == 1'b0) && (SumA31_sub_temp_2[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_2[32] == 1'b1) && (SumA31_sub_temp_2[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_2[31:0])));
  assign SumA31_out1[2] = ((SumA31_cast_2[31] == 1'b0) && (SumA31_cast_2[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_2[31] == 1'b1) && (SumA31_cast_2[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_2[30:0], 1'b0}));
  assign SumA31_sub_cast_9 = {SumA21_out1[3][31], SumA21_out1[3]};
  assign SumA31_sub_cast_10 = ({{2{a_3_1_out1[3][31]}}, a_3_1_out1[3][31:2]}) + $signed({1'b0, a_3_1_out1[3][1]});
  assign SumA31_sub_cast_11 = {SumA31_sub_cast_10[31], SumA31_sub_cast_10};
  assign SumA31_sub_temp_3 = SumA31_sub_cast_9 - SumA31_sub_cast_11;
  assign SumA31_cast_3 = ((SumA31_sub_temp_3[32] == 1'b0) && (SumA31_sub_temp_3[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_3[32] == 1'b1) && (SumA31_sub_temp_3[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_3[31:0])));
  assign SumA31_out1[3] = ((SumA31_cast_3[31] == 1'b0) && (SumA31_cast_3[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_3[31] == 1'b1) && (SumA31_cast_3[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_3[30:0], 1'b0}));
  assign SumA31_sub_cast_12 = {SumA21_out1[4][31], SumA21_out1[4]};
  assign SumA31_sub_cast_13 = ({{2{a_3_1_out1[4][31]}}, a_3_1_out1[4][31:2]}) + $signed({1'b0, a_3_1_out1[4][1]});
  assign SumA31_sub_cast_14 = {SumA31_sub_cast_13[31], SumA31_sub_cast_13};
  assign SumA31_sub_temp_4 = SumA31_sub_cast_12 - SumA31_sub_cast_14;
  assign SumA31_cast_4 = ((SumA31_sub_temp_4[32] == 1'b0) && (SumA31_sub_temp_4[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_4[32] == 1'b1) && (SumA31_sub_temp_4[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_4[31:0])));
  assign SumA31_out1[4] = ((SumA31_cast_4[31] == 1'b0) && (SumA31_cast_4[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_4[31] == 1'b1) && (SumA31_cast_4[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_4[30:0], 1'b0}));
  assign SumA31_sub_cast_15 = {SumA21_out1[5][31], SumA21_out1[5]};
  assign SumA31_sub_cast_16 = ({{2{a_3_1_out1[5][31]}}, a_3_1_out1[5][31:2]}) + $signed({1'b0, a_3_1_out1[5][1]});
  assign SumA31_sub_cast_17 = {SumA31_sub_cast_16[31], SumA31_sub_cast_16};
  assign SumA31_sub_temp_5 = SumA31_sub_cast_15 - SumA31_sub_cast_17;
  assign SumA31_cast_5 = ((SumA31_sub_temp_5[32] == 1'b0) && (SumA31_sub_temp_5[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_5[32] == 1'b1) && (SumA31_sub_temp_5[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_5[31:0])));
  assign SumA31_out1[5] = ((SumA31_cast_5[31] == 1'b0) && (SumA31_cast_5[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_5[31] == 1'b1) && (SumA31_cast_5[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_5[30:0], 1'b0}));
  assign SumA31_sub_cast_18 = {SumA21_out1[6][31], SumA21_out1[6]};
  assign SumA31_sub_cast_19 = ({{2{a_3_1_out1[6][31]}}, a_3_1_out1[6][31:2]}) + $signed({1'b0, a_3_1_out1[6][1]});
  assign SumA31_sub_cast_20 = {SumA31_sub_cast_19[31], SumA31_sub_cast_19};
  assign SumA31_sub_temp_6 = SumA31_sub_cast_18 - SumA31_sub_cast_20;
  assign SumA31_cast_6 = ((SumA31_sub_temp_6[32] == 1'b0) && (SumA31_sub_temp_6[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_6[32] == 1'b1) && (SumA31_sub_temp_6[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_6[31:0])));
  assign SumA31_out1[6] = ((SumA31_cast_6[31] == 1'b0) && (SumA31_cast_6[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_6[31] == 1'b1) && (SumA31_cast_6[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_6[30:0], 1'b0}));
  assign SumA31_sub_cast_21 = {SumA21_out1[7][31], SumA21_out1[7]};
  assign SumA31_sub_cast_22 = ({{2{a_3_1_out1[7][31]}}, a_3_1_out1[7][31:2]}) + $signed({1'b0, a_3_1_out1[7][1]});
  assign SumA31_sub_cast_23 = {SumA31_sub_cast_22[31], SumA31_sub_cast_22};
  assign SumA31_sub_temp_7 = SumA31_sub_cast_21 - SumA31_sub_cast_23;
  assign SumA31_cast_7 = ((SumA31_sub_temp_7[32] == 1'b0) && (SumA31_sub_temp_7[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_sub_temp_7[32] == 1'b1) && (SumA31_sub_temp_7[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumA31_sub_temp_7[31:0])));
  assign SumA31_out1[7] = ((SumA31_cast_7[31] == 1'b0) && (SumA31_cast_7[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumA31_cast_7[31] == 1'b1) && (SumA31_cast_7[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumA31_cast_7[30:0], 1'b0}));



  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_1 = {Delay_out1_9[0], 31'b0000000000000000000000000000000};
  assign b_2_1_2 = {b_2_1_1[62], b_2_1_1};
  assign b_2_1_mul_temp =  - (b_2_1_2);
  assign b_2_1_out1[0] = (((b_2_1_mul_temp[63] == 1'b0) && (b_2_1_mul_temp[62] != 1'b0)) || ((b_2_1_mul_temp[63] == 1'b0) && (b_2_1_mul_temp[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp[63] == 1'b1) && (b_2_1_mul_temp[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp[62:31] + $signed({1'b0, b_2_1_mul_temp[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_3 = {Delay_out1_9[1], 31'b0000000000000000000000000000000};
  assign b_2_1_4 = {b_2_1_3[62], b_2_1_3};
  assign b_2_1_mul_temp_1 =  - (b_2_1_4);
  assign b_2_1_out1[1] = (((b_2_1_mul_temp_1[63] == 1'b0) && (b_2_1_mul_temp_1[62] != 1'b0)) || ((b_2_1_mul_temp_1[63] == 1'b0) && (b_2_1_mul_temp_1[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_1[63] == 1'b1) && (b_2_1_mul_temp_1[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_1[62:31] + $signed({1'b0, b_2_1_mul_temp_1[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_5 = {Delay_out1_9[2], 31'b0000000000000000000000000000000};
  assign b_2_1_6 = {b_2_1_5[62], b_2_1_5};
  assign b_2_1_mul_temp_2 =  - (b_2_1_6);
  assign b_2_1_out1[2] = (((b_2_1_mul_temp_2[63] == 1'b0) && (b_2_1_mul_temp_2[62] != 1'b0)) || ((b_2_1_mul_temp_2[63] == 1'b0) && (b_2_1_mul_temp_2[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_2[63] == 1'b1) && (b_2_1_mul_temp_2[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_2[62:31] + $signed({1'b0, b_2_1_mul_temp_2[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_7 = {Delay_out1_9[3], 31'b0000000000000000000000000000000};
  assign b_2_1_8 = {b_2_1_7[62], b_2_1_7};
  assign b_2_1_mul_temp_3 =  - (b_2_1_8);
  assign b_2_1_out1[3] = (((b_2_1_mul_temp_3[63] == 1'b0) && (b_2_1_mul_temp_3[62] != 1'b0)) || ((b_2_1_mul_temp_3[63] == 1'b0) && (b_2_1_mul_temp_3[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_3[63] == 1'b1) && (b_2_1_mul_temp_3[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_3[62:31] + $signed({1'b0, b_2_1_mul_temp_3[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_9 = {Delay_out1_9[4], 31'b0000000000000000000000000000000};
  assign b_2_1_10 = {b_2_1_9[62], b_2_1_9};
  assign b_2_1_mul_temp_4 =  - (b_2_1_10);
  assign b_2_1_out1[4] = (((b_2_1_mul_temp_4[63] == 1'b0) && (b_2_1_mul_temp_4[62] != 1'b0)) || ((b_2_1_mul_temp_4[63] == 1'b0) && (b_2_1_mul_temp_4[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_4[63] == 1'b1) && (b_2_1_mul_temp_4[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_4[62:31] + $signed({1'b0, b_2_1_mul_temp_4[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_11 = {Delay_out1_9[5], 31'b0000000000000000000000000000000};
  assign b_2_1_12 = {b_2_1_11[62], b_2_1_11};
  assign b_2_1_mul_temp_5 =  - (b_2_1_12);
  assign b_2_1_out1[5] = (((b_2_1_mul_temp_5[63] == 1'b0) && (b_2_1_mul_temp_5[62] != 1'b0)) || ((b_2_1_mul_temp_5[63] == 1'b0) && (b_2_1_mul_temp_5[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_5[63] == 1'b1) && (b_2_1_mul_temp_5[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_5[62:31] + $signed({1'b0, b_2_1_mul_temp_5[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_13 = {Delay_out1_9[6], 31'b0000000000000000000000000000000};
  assign b_2_1_14 = {b_2_1_13[62], b_2_1_13};
  assign b_2_1_mul_temp_6 =  - (b_2_1_14);
  assign b_2_1_out1[6] = (((b_2_1_mul_temp_6[63] == 1'b0) && (b_2_1_mul_temp_6[62] != 1'b0)) || ((b_2_1_mul_temp_6[63] == 1'b0) && (b_2_1_mul_temp_6[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_6[63] == 1'b1) && (b_2_1_mul_temp_6[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_6[62:31] + $signed({1'b0, b_2_1_mul_temp_6[30]})));
  // CSD Encoding (2147483648) : 010000000000000000000000000000000; Cost (Adders) = 0
  assign b_2_1_15 = {Delay_out1_9[7], 31'b0000000000000000000000000000000};
  assign b_2_1_16 = {b_2_1_15[62], b_2_1_15};
  assign b_2_1_mul_temp_7 =  - (b_2_1_16);
  assign b_2_1_out1[7] = (((b_2_1_mul_temp_7[63] == 1'b0) && (b_2_1_mul_temp_7[62] != 1'b0)) || ((b_2_1_mul_temp_7[63] == 1'b0) && (b_2_1_mul_temp_7[62:31] == 32'sb01111111111111111111111111111111)) ? 32'sb01111111111111111111111111111111 :
              ((b_2_1_mul_temp_7[63] == 1'b1) && (b_2_1_mul_temp_7[62] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              b_2_1_mul_temp_7[62:31] + $signed({1'b0, b_2_1_mul_temp_7[30]})));



  assign SumB21_add_cast = ({SumA31_out1[0][31], SumA31_out1[0][31:1]}) + $signed({1'b0, SumA31_out1[0][0]});
  assign SumB21_add_cast_1 = {SumB21_add_cast[31], SumB21_add_cast};
  assign SumB21_add_cast_2 = {b_2_1_out1[0][31], b_2_1_out1[0]};
  assign SumB21_add_temp = SumB21_add_cast_1 + SumB21_add_cast_2;
  assign SumB21_cast = ((SumB21_add_temp[32] == 1'b0) && (SumB21_add_temp[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp[32] == 1'b1) && (SumB21_add_temp[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp[31:0])));
  assign SumB21_out1[0] = ((SumB21_cast[31] == 1'b0) && (SumB21_cast[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast[31] == 1'b1) && (SumB21_cast[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast[30:0], 1'b0}));
  assign SumB21_add_cast_3 = ({SumA31_out1[1][31], SumA31_out1[1][31:1]}) + $signed({1'b0, SumA31_out1[1][0]});
  assign SumB21_add_cast_4 = {SumB21_add_cast_3[31], SumB21_add_cast_3};
  assign SumB21_add_cast_5 = {b_2_1_out1[1][31], b_2_1_out1[1]};
  assign SumB21_add_temp_1 = SumB21_add_cast_4 + SumB21_add_cast_5;
  assign SumB21_cast_1 = ((SumB21_add_temp_1[32] == 1'b0) && (SumB21_add_temp_1[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_1[32] == 1'b1) && (SumB21_add_temp_1[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_1[31:0])));
  assign SumB21_out1[1] = ((SumB21_cast_1[31] == 1'b0) && (SumB21_cast_1[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_1[31] == 1'b1) && (SumB21_cast_1[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_1[30:0], 1'b0}));
  assign SumB21_add_cast_6 = ({SumA31_out1[2][31], SumA31_out1[2][31:1]}) + $signed({1'b0, SumA31_out1[2][0]});
  assign SumB21_add_cast_7 = {SumB21_add_cast_6[31], SumB21_add_cast_6};
  assign SumB21_add_cast_8 = {b_2_1_out1[2][31], b_2_1_out1[2]};
  assign SumB21_add_temp_2 = SumB21_add_cast_7 + SumB21_add_cast_8;
  assign SumB21_cast_2 = ((SumB21_add_temp_2[32] == 1'b0) && (SumB21_add_temp_2[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_2[32] == 1'b1) && (SumB21_add_temp_2[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_2[31:0])));
  assign SumB21_out1[2] = ((SumB21_cast_2[31] == 1'b0) && (SumB21_cast_2[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_2[31] == 1'b1) && (SumB21_cast_2[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_2[30:0], 1'b0}));
  assign SumB21_add_cast_9 = ({SumA31_out1[3][31], SumA31_out1[3][31:1]}) + $signed({1'b0, SumA31_out1[3][0]});
  assign SumB21_add_cast_10 = {SumB21_add_cast_9[31], SumB21_add_cast_9};
  assign SumB21_add_cast_11 = {b_2_1_out1[3][31], b_2_1_out1[3]};
  assign SumB21_add_temp_3 = SumB21_add_cast_10 + SumB21_add_cast_11;
  assign SumB21_cast_3 = ((SumB21_add_temp_3[32] == 1'b0) && (SumB21_add_temp_3[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_3[32] == 1'b1) && (SumB21_add_temp_3[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_3[31:0])));
  assign SumB21_out1[3] = ((SumB21_cast_3[31] == 1'b0) && (SumB21_cast_3[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_3[31] == 1'b1) && (SumB21_cast_3[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_3[30:0], 1'b0}));
  assign SumB21_add_cast_12 = ({SumA31_out1[4][31], SumA31_out1[4][31:1]}) + $signed({1'b0, SumA31_out1[4][0]});
  assign SumB21_add_cast_13 = {SumB21_add_cast_12[31], SumB21_add_cast_12};
  assign SumB21_add_cast_14 = {b_2_1_out1[4][31], b_2_1_out1[4]};
  assign SumB21_add_temp_4 = SumB21_add_cast_13 + SumB21_add_cast_14;
  assign SumB21_cast_4 = ((SumB21_add_temp_4[32] == 1'b0) && (SumB21_add_temp_4[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_4[32] == 1'b1) && (SumB21_add_temp_4[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_4[31:0])));
  assign SumB21_out1[4] = ((SumB21_cast_4[31] == 1'b0) && (SumB21_cast_4[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_4[31] == 1'b1) && (SumB21_cast_4[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_4[30:0], 1'b0}));
  assign SumB21_add_cast_15 = ({SumA31_out1[5][31], SumA31_out1[5][31:1]}) + $signed({1'b0, SumA31_out1[5][0]});
  assign SumB21_add_cast_16 = {SumB21_add_cast_15[31], SumB21_add_cast_15};
  assign SumB21_add_cast_17 = {b_2_1_out1[5][31], b_2_1_out1[5]};
  assign SumB21_add_temp_5 = SumB21_add_cast_16 + SumB21_add_cast_17;
  assign SumB21_cast_5 = ((SumB21_add_temp_5[32] == 1'b0) && (SumB21_add_temp_5[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_5[32] == 1'b1) && (SumB21_add_temp_5[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_5[31:0])));
  assign SumB21_out1[5] = ((SumB21_cast_5[31] == 1'b0) && (SumB21_cast_5[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_5[31] == 1'b1) && (SumB21_cast_5[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_5[30:0], 1'b0}));
  assign SumB21_add_cast_18 = ({SumA31_out1[6][31], SumA31_out1[6][31:1]}) + $signed({1'b0, SumA31_out1[6][0]});
  assign SumB21_add_cast_19 = {SumB21_add_cast_18[31], SumB21_add_cast_18};
  assign SumB21_add_cast_20 = {b_2_1_out1[6][31], b_2_1_out1[6]};
  assign SumB21_add_temp_6 = SumB21_add_cast_19 + SumB21_add_cast_20;
  assign SumB21_cast_6 = ((SumB21_add_temp_6[32] == 1'b0) && (SumB21_add_temp_6[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_6[32] == 1'b1) && (SumB21_add_temp_6[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_6[31:0])));
  assign SumB21_out1[6] = ((SumB21_cast_6[31] == 1'b0) && (SumB21_cast_6[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_6[31] == 1'b1) && (SumB21_cast_6[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_6[30:0], 1'b0}));
  assign SumB21_add_cast_21 = ({SumA31_out1[7][31], SumA31_out1[7][31:1]}) + $signed({1'b0, SumA31_out1[7][0]});
  assign SumB21_add_cast_22 = {SumB21_add_cast_21[31], SumB21_add_cast_21};
  assign SumB21_add_cast_23 = {b_2_1_out1[7][31], b_2_1_out1[7]};
  assign SumB21_add_temp_7 = SumB21_add_cast_22 + SumB21_add_cast_23;
  assign SumB21_cast_7 = ((SumB21_add_temp_7[32] == 1'b0) && (SumB21_add_temp_7[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_add_temp_7[32] == 1'b1) && (SumB21_add_temp_7[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB21_add_temp_7[31:0])));
  assign SumB21_out1[7] = ((SumB21_cast_7[31] == 1'b0) && (SumB21_cast_7[30] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB21_cast_7[31] == 1'b1) && (SumB21_cast_7[30] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              {SumB21_cast_7[30:0], 1'b0}));



  assign SumB31_add_cast = {SumB21_out1[0][31], SumB21_out1[0]};
  assign SumB31_add_cast_1 = {Delay1_out1_1[0][31], Delay1_out1_1[0]};
  assign SumB31_add_temp = SumB31_add_cast + SumB31_add_cast_1;
  assign SumB31_cast = ((SumB31_add_temp[32] == 1'b0) && (SumB31_add_temp[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp[32] == 1'b1) && (SumB31_add_temp[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp[31:0])));
  assign SumB31_out1[0] = ((SumB31_cast[31] == 1'b0) && (SumB31_cast[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast[31] == 1'b1) && (SumB31_cast[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast[23:0], 8'b00000000}));
  assign SumB31_add_cast_2 = {SumB21_out1[1][31], SumB21_out1[1]};
  assign SumB31_add_cast_3 = {Delay1_out1_1[1][31], Delay1_out1_1[1]};
  assign SumB31_add_temp_1 = SumB31_add_cast_2 + SumB31_add_cast_3;
  assign SumB31_cast_1 = ((SumB31_add_temp_1[32] == 1'b0) && (SumB31_add_temp_1[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_1[32] == 1'b1) && (SumB31_add_temp_1[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_1[31:0])));
  assign SumB31_out1[1] = ((SumB31_cast_1[31] == 1'b0) && (SumB31_cast_1[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_1[31] == 1'b1) && (SumB31_cast_1[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_1[23:0], 8'b00000000}));
  assign SumB31_add_cast_4 = {SumB21_out1[2][31], SumB21_out1[2]};
  assign SumB31_add_cast_5 = {Delay1_out1_1[2][31], Delay1_out1_1[2]};
  assign SumB31_add_temp_2 = SumB31_add_cast_4 + SumB31_add_cast_5;
  assign SumB31_cast_2 = ((SumB31_add_temp_2[32] == 1'b0) && (SumB31_add_temp_2[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_2[32] == 1'b1) && (SumB31_add_temp_2[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_2[31:0])));
  assign SumB31_out1[2] = ((SumB31_cast_2[31] == 1'b0) && (SumB31_cast_2[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_2[31] == 1'b1) && (SumB31_cast_2[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_2[23:0], 8'b00000000}));
  assign SumB31_add_cast_6 = {SumB21_out1[3][31], SumB21_out1[3]};
  assign SumB31_add_cast_7 = {Delay1_out1_1[3][31], Delay1_out1_1[3]};
  assign SumB31_add_temp_3 = SumB31_add_cast_6 + SumB31_add_cast_7;
  assign SumB31_cast_3 = ((SumB31_add_temp_3[32] == 1'b0) && (SumB31_add_temp_3[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_3[32] == 1'b1) && (SumB31_add_temp_3[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_3[31:0])));
  assign SumB31_out1[3] = ((SumB31_cast_3[31] == 1'b0) && (SumB31_cast_3[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_3[31] == 1'b1) && (SumB31_cast_3[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_3[23:0], 8'b00000000}));
  assign SumB31_add_cast_8 = {SumB21_out1[4][31], SumB21_out1[4]};
  assign SumB31_add_cast_9 = {Delay1_out1_1[4][31], Delay1_out1_1[4]};
  assign SumB31_add_temp_4 = SumB31_add_cast_8 + SumB31_add_cast_9;
  assign SumB31_cast_4 = ((SumB31_add_temp_4[32] == 1'b0) && (SumB31_add_temp_4[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_4[32] == 1'b1) && (SumB31_add_temp_4[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_4[31:0])));
  assign SumB31_out1[4] = ((SumB31_cast_4[31] == 1'b0) && (SumB31_cast_4[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_4[31] == 1'b1) && (SumB31_cast_4[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_4[23:0], 8'b00000000}));
  assign SumB31_add_cast_10 = {SumB21_out1[5][31], SumB21_out1[5]};
  assign SumB31_add_cast_11 = {Delay1_out1_1[5][31], Delay1_out1_1[5]};
  assign SumB31_add_temp_5 = SumB31_add_cast_10 + SumB31_add_cast_11;
  assign SumB31_cast_5 = ((SumB31_add_temp_5[32] == 1'b0) && (SumB31_add_temp_5[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_5[32] == 1'b1) && (SumB31_add_temp_5[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_5[31:0])));
  assign SumB31_out1[5] = ((SumB31_cast_5[31] == 1'b0) && (SumB31_cast_5[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_5[31] == 1'b1) && (SumB31_cast_5[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_5[23:0], 8'b00000000}));
  assign SumB31_add_cast_12 = {SumB21_out1[6][31], SumB21_out1[6]};
  assign SumB31_add_cast_13 = {Delay1_out1_1[6][31], Delay1_out1_1[6]};
  assign SumB31_add_temp_6 = SumB31_add_cast_12 + SumB31_add_cast_13;
  assign SumB31_cast_6 = ((SumB31_add_temp_6[32] == 1'b0) && (SumB31_add_temp_6[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_6[32] == 1'b1) && (SumB31_add_temp_6[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_6[31:0])));
  assign SumB31_out1[6] = ((SumB31_cast_6[31] == 1'b0) && (SumB31_cast_6[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_6[31] == 1'b1) && (SumB31_cast_6[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_6[23:0], 8'b00000000}));
  assign SumB31_add_cast_14 = {SumB21_out1[7][31], SumB21_out1[7]};
  assign SumB31_add_cast_15 = {Delay1_out1_1[7][31], Delay1_out1_1[7]};
  assign SumB31_add_temp_7 = SumB31_add_cast_14 + SumB31_add_cast_15;
  assign SumB31_cast_7 = ((SumB31_add_temp_7[32] == 1'b0) && (SumB31_add_temp_7[31] != 1'b0) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_add_temp_7[32] == 1'b1) && (SumB31_add_temp_7[31] != 1'b1) ? 32'sb10000000000000000000000000000000 :
              $signed(SumB31_add_temp_7[31:0])));
  assign SumB31_out1[7] = ((SumB31_cast_7[31] == 1'b0) && (SumB31_cast_7[30:23] != 8'b00000000) ? 32'sb01111111111111111111111111111111 :
              ((SumB31_cast_7[31] == 1'b1) && (SumB31_cast_7[30:23] != 8'b11111111) ? 32'sb10000000000000000000000000000000 :
              {SumB31_cast_7[23:0], 8'b00000000}));



  assign Output_0 = SumB31_out1[0];

  assign Output_1 = SumB31_out1[1];

  assign Output_2 = SumB31_out1[2];

  assign Output_3 = SumB31_out1[3];

  assign Output_4 = SumB31_out1[4];

  assign Output_5 = SumB31_out1[5];

  assign Output_6 = SumB31_out1[6];

  assign Output_7 = SumB31_out1[7];

endmodule  // highpass

