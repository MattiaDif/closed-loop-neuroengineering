// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\cust_arch_18\one_pole_IIR.v
// Created: 2021-05-25 12:43:17
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: one_pole_IIR
// Source Path: cust_arch_18/cust_architecture/process_and_retrieve/one_pole_IIR
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module one_pole_IIR
          (current_value,
           last_LPF,
           HPF_output,
           LPF_output);


  input   [15:0] current_value;  // uint16
  input   signed [15:0] last_LPF;  // sfix16_E5
  output  [15:0] HPF_output;  // uint16
  output  signed [15:0] LPF_output;  // sfix16_E5


  wire [15:0] Constant_out1;  // uint16
  wire signed [16:0] Subtract1_sub_temp;  // sfix17
  wire signed [16:0] Subtract1_1;  // sfix17
  wire signed [16:0] Subtract1_2;  // sfix17
  wire signed [15:0] Subtract1_out1;  // int16
  wire signed [15:0] Filter1_out1;  // sfix16_E1
  wire signed [15:0] LP;  // sfix16_E5
  wire signed [15:0] Data_Type_Conversion1_out1;  // int16
  wire [15:0] Constant1_out1;  // uint16
  wire signed [17:0] Subtract2_add_temp;  // sfix18
  wire signed [17:0] Subtract2_1;  // sfix18
  wire signed [17:0] Subtract2_2;  // sfix18
  wire [15:0] Subtract2_out1;  // uint16

  // current implementation is a High Pass 300/30000


  assign Constant_out1 = 16'b1000000000000000;



  assign Subtract1_1 = {1'b0, current_value};
  assign Subtract1_2 = {1'b0, Constant_out1};
  assign Subtract1_sub_temp = Subtract1_1 - Subtract1_2;
  assign Subtract1_out1 = Subtract1_sub_temp[15:0];



  Filter1 u_Filter1 (.Input_rsvd(Subtract1_out1),  // int16
                     .Input1(last_LPF),  // sfix16_E5
                     .Output_rsvd(Filter1_out1),  // sfix16_E1
                     .Output1(LP)  // sfix16_E5
                     );

  assign Data_Type_Conversion1_out1 = ((Filter1_out1[15] == 1'b0) && (Filter1_out1[14] != 1'b0) ? 16'sb0111111111111111 :
              ((Filter1_out1[15] == 1'b1) && (Filter1_out1[14] != 1'b1) ? 16'sb1000000000000000 :
              {Filter1_out1[14:0], 1'b0}));



  assign Constant1_out1 = 16'b1000000000000000;



  assign Subtract2_1 = {{2{Data_Type_Conversion1_out1[15]}}, Data_Type_Conversion1_out1};
  assign Subtract2_2 = {2'b0, Constant1_out1};
  assign Subtract2_add_temp = Subtract2_1 + Subtract2_2;
  assign Subtract2_out1 = Subtract2_add_temp[15:0];



  assign HPF_output = Subtract2_out1;

  assign LPF_output = LP;

endmodule  // one_pole_IIR

