// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v12\HardThreshold.v
// Created: 2021-06-22 14:12:03
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: HardThreshold
// Source Path: CustArch_v12/cust_architecture/process_and_retrieve/HardThreshold
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module HardThreshold
          (clk,
           reset,
           enb,
           filter_output,
           write_porcessing_addr_read_from_storage_addr_1,
           rd_addr,
           InputState,
           spike);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] filter_output;  // uint16
  input   [8:0] write_porcessing_addr_read_from_storage_addr_1;  // ufix9
  input   [8:0] rd_addr;  // ufix9
  input   [7:0] InputState;  // uint8
  output  [15:0] spike;  // uint16


  wire read_from_porcessing;
  wire refractory_period_out1;
  wire Logical_Operator_out1;
  wire [15:0] refractory_period_out2;  // uint16


  assign read_from_porcessing = filter_output <= 16'b1000000000100000;



  assign Logical_Operator_out1 = read_from_porcessing & refractory_period_out1;



  refractory_period u_refractory_period (.clk(clk),
                                         .reset(reset),
                                         .enb(enb),
                                         .InputState(InputState),  // uint8
                                         .wr_en(Logical_Operator_out1),
                                         .write_porcessing_addr_read_from_storage_addr_1(write_porcessing_addr_read_from_storage_addr_1),  // ufix9
                                         .rd_addr(rd_addr),  // ufix9
                                         .refractory_check(refractory_period_out1),
                                         .spike(refractory_period_out2)  // uint16
                                         );

  assign spike = refractory_period_out2;

endmodule  // HardThreshold

