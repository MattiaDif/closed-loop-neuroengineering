// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArchitecture\input_interpret_store_retrieve.v
// Created: 2021-10-26 14:22:20
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: input_interpret_store_retrieve
// Source Path: CustArchitecture/cust_architecture/input_interpret_store_retrieve
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module input_interpret_store_retrieve
          (clk,
           reset,
           enb,
           FIFO_data_in,
           FIFO_write_to,
           read_output_data_input_interpret_store_retrieve,
           data_stream_enable,
           InputState,
           output_data_input_interpret_store_retrieve,
           output_data_to_process,
           address_output_data_to_process);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] FIFO_data_in;  // uint16
  input   FIFO_write_to;
  input   [8:0] read_output_data_input_interpret_store_retrieve;  // ufix9
  input   [7:0] data_stream_enable;  // uint8
  output  [7:0] InputState;  // uint8
  output  [15:0] output_data_input_interpret_store_retrieve;  // uint16
  output  [15:0] output_data_to_process;  // uint16
  output  [8:0] address_output_data_to_process;  // ufix9


  wire [7:0] Interpret_to_RAM_input_out1;  // uint8
  wire Interpret_to_RAM_input_out2;
  wire [15:0] Interpret_to_RAM_input_out3;  // uint16
  wire [8:0] wr_addr;  // ufix9
  wire Interpret_to_RAM_input_out5;
  wire [15:0] store_and_retrieve_input_out1;  // uint16
  wire [15:0] store_and_retrieve_input_out2;  // uint16
  wire [8:0] read_from_porcessing_addr;  // ufix9

  // reading address
  // from output
  // 
  // address sent for processing
  // 
  // data sent for processing
  // 
  // data sent to Output


  Interpret_to_RAM_input u_Interpret_to_RAM_input (.clk(clk),
                                                   .reset(reset),
                                                   .enb(enb),
                                                   .FIFO_data_in(FIFO_data_in),  // uint16
                                                   .FIFO_write_to(FIFO_write_to),
                                                   .InputState(InputState),  // uint8
                                                   .data_stream_enable(data_stream_enable),  // uint8
                                                   .device_output(Interpret_to_RAM_input_out1),  // uint8
                                                   .inc_source_device(Interpret_to_RAM_input_out2),
                                                   .wr_din(Interpret_to_RAM_input_out3),  // uint16
                                                   .write_address(wr_addr),  // ufix9
                                                   .wr_en(Interpret_to_RAM_input_out5)
                                                   );

  InputStateMachine u_InputStateMachine (.clk(clk),
                                         .reset(reset),
                                         .enb(enb),
                                         .FIFO_data_in(FIFO_data_in),  // uint16
                                         .FIFO_write_to(FIFO_write_to),
                                         .channel_0_19(Interpret_to_RAM_input_out1),  // uint8
                                         .inc_source_device_MSB(Interpret_to_RAM_input_out2),
                                         .InputState(InputState)  // uint8
                                         );

  store_and_retrieve_input u_store_and_retrieve_input (.clk(clk),
                                                       .reset(reset),
                                                       .enb(enb),
                                                       .read_address(read_output_data_input_interpret_store_retrieve),  // ufix9
                                                       .wr_din(Interpret_to_RAM_input_out3),  // uint16
                                                       .wr_address(wr_addr),  // ufix9
                                                       .wr_en(Interpret_to_RAM_input_out5),
                                                       .InputState(InputState),  // uint8
                                                       .read_from_storage_value(store_and_retrieve_input_out1),  // uint16
                                                       .current_value(store_and_retrieve_input_out2),  // uint16
                                                       .read_from_porcessing_addr(read_from_porcessing_addr)  // ufix9
                                                       );

  assign output_data_input_interpret_store_retrieve = store_and_retrieve_input_out1;

  assign output_data_to_process = store_and_retrieve_input_out2;

  assign address_output_data_to_process = read_from_porcessing_addr;

endmodule  // input_interpret_store_retrieve

