// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArchitecture\Butter_1st_HP.v
// Created: 2021-10-26 14:22:20
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Butter_1st_HP
// Source Path: CustArchitecture/cust_architecture/Butter_1st_HP
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Butter_1st_HP
          (clk,
           reset,
           enb,
           output_data_to_process,
           InputState,
           address_output_data_to_process,
           read_filter_output_or_spike,
           filter_output,
           filter_writing_address,
           filter_writing_enable,
           filtered);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] output_data_to_process;  // uint16
  input   [7:0] InputState;  // uint8
  input   [8:0] address_output_data_to_process;  // ufix9
  input   [8:0] read_filter_output_or_spike;  // ufix9
  output  [15:0] filter_output;  // uint16
  output  [8:0] filter_writing_address;  // ufix9
  output  filter_writing_enable;
  output  [15:0] filtered;  // uint16


  wire [15:0] Subsystem_out1;  // uint16
  wire [8:0] write_porcessing_addr_read_from_storage_addr_1;  // ufix9
  wire write_en;
  wire [15:0] ProcessedData_storage_out1;  // uint16
  wire [15:0] filtered_sample;  // uint16


  Subsystem u_Subsystem (.clk(clk),
                         .reset(reset),
                         .enb(enb),
                         .output_data_to_process(output_data_to_process),  // uint16
                         .InputState(InputState),  // uint8
                         .address_output_data_to_process(address_output_data_to_process),  // ufix9
                         .filter_output(Subsystem_out1),  // uint16
                         .filter_writing_address(write_porcessing_addr_read_from_storage_addr_1),  // ufix9
                         .filter_writing_enable(write_en)
                         );

  assign filter_output = Subsystem_out1;

  assign filter_writing_address = write_porcessing_addr_read_from_storage_addr_1;

  assign filter_writing_enable = write_en;

  DualPortRAM_generic #(.AddrWidth(9),
                        .DataWidth(16)
                        )
                      u_ProcessedData_storage (.clk(clk),
                                               .enb(enb),
                                               .wr_din(Subsystem_out1),
                                               .wr_addr(write_porcessing_addr_read_from_storage_addr_1),
                                               .wr_en(write_en),
                                               .rd_addr(read_filter_output_or_spike),
                                               .wr_dout(ProcessedData_storage_out1),
                                               .rd_dout(filtered_sample)
                                               );

  assign filtered = filtered_sample;

endmodule  // Butter_1st_HP

