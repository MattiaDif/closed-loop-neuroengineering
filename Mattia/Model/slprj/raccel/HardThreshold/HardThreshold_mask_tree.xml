<?xml version="1.0" encoding="UTF-8"?>
<MF0 version="1.1" packageUris="http://schema.mathworks.com/mf0/slsa_mm/R2020a">
  <slsa.mm.MaskTree type="slsa.mm.MaskTree" uuid="5c20bf1a-72fd-429e-8c49-793f0680bd08">
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="3af324a0-59d5-4beb-9d63-b85c7d4b4a17">
      <blockPath>HardThreshold/Refractory check/Refractory check</blockPath>
      <id>HardThreshold:43</id>
      <masks type="slsa.mm.Mask" uuid="54ab4fc2-932f-4bc5-8278-397d05e849b4">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="a7a2707a-2de6-4b5d-ae89-1b031372a1c9">
          <expression>5</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="49278d50-494a-488f-beaf-1f0f7713bc35">
          <expression>2.7e-4</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="afbc5837-dd33-4f22-af00-c93c2d348b24">
          <expression>2</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="83e2632f-000a-432f-82a2-090d885abbfc">
          <expression>1</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="ba05024e-2f19-4ef4-b878-5ba9b8bf38f1">
      <blockPath>HardThreshold/Refractory check/Time since last event/HDL Counter</blockPath>
      <childrenIds>HardThreshold:52:20</childrenIds>
      <id>HardThreshold:52</id>
      <masks type="slsa.mm.Mask" uuid="90f493e5-448d-40cd-a173-62988b5216f9">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="31ba2ac5-8a0b-414d-8910-039d099dcee2">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="85d2b84b-7a02-4f59-8595-5aa1ad8eae6d">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="6acd39e1-d116-4d69-9474-7e2ee1f624c5">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="8fba1867-7f58-4da2-bf71-f3d07292991c">
          <expression>25</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="eb13586f-c563-484f-a13d-3a2e9a635ee5">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="ab2aada1-41bd-4651-9112-a1a08c9051cf">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="0856be6d-af73-45b2-a19e-8332f7c616b1">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="8277d577-3c5a-4420-acde-b6b2ef137dae">
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="9e505846-41af-440e-bd23-0374ed687903">
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="d6fdd951-e07e-431c-ad87-d09d895ca3c5">
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="cfb61590-c7b5-4ccb-a162-fe2d247e1b01">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="9b4f05da-7ff1-4533-9838-1ed98ac01656">
          <expression>32</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="c49e1ed6-4619-45d0-a919-cc8f349e066d">
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="2ea642cf-d0f1-409f-89d4-37d987de9a01">
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc freerun samptime] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="2f78d357-f2fe-47b5-acd5-c79609086c30">
      <blockPath>HardThreshold/Refractory check/Time since last event/HDL Counter/Max_value</blockPath>
      <id>HardThreshold:52:20</id>
      <masks type="slsa.mm.Mask" uuid="535ca240-af0d-41dc-bb3f-c6eb9e36b046">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="dc64358e-1d6f-4b60-82c6-2cb8ccdc26ef">
          <expression>1</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="f322f05f-c9d3-4974-84f7-4a6ad7751817">
          <expression>fi(maxval_sc, issigned, CountWordLen, 0)</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="f08563bd-eed9-4c0f-b64f-e348655aad27">
          <expression>2</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="5b3c043d-bc2c-42bc-966d-16c0e8d8c7d0">
          <expression>0</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>HardThreshold:52</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="f74b521c-e998-49c7-becc-322bb2c3c882">
      <blockPath>HardThreshold/Edge Detector</blockPath>
      <childrenIds>HardThreshold:78:2</childrenIds>
      <childrenIds>HardThreshold:78:3</childrenIds>
      <id>HardThreshold:78</id>
      <masks type="slsa.mm.Mask" uuid="c18dc089-67ac-4555-8ea0-3f36b0dee620">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="44593d76-e969-4940-8a36-41c4932077c5">
          <expression>1</expression>
          <name>InputProcessing</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <initializationCode>[x,y] = dspblkedetect2(&apos;icon&apos;);
dspblkedetect2(&apos;init&apos;, gcbh, gcb);</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="6c75af61-1560-4d89-b634-0b8c490b6838">
      <blockPath>HardThreshold/Edge Detector/Check Signal Attributes</blockPath>
      <id>HardThreshold:78:2</id>
      <masks type="slsa.mm.Mask" uuid="77f5c429-b874-4a28-803f-b5c86119028b">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="be738e20-1af2-470e-99e0-7a6f834028a5">
          <expression>2</expression>
          <name>SigAttribCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="dc774f50-3b1e-44a8-8526-a689f29ff490">
          <expression>1</expression>
          <name>Complexity</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="3d5d1a9b-3c7e-45ed-8584-2991781ecfb7">
          <expression>1</expression>
          <name>DimsCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="ab99e61d-a6ff-4547-8ebf-3953b970f1d1">
          <expression>2</expression>
          <name>DatatypeCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="b81850a6-31d5-4486-9e33-2652775479df">
          <expression>2</expression>
          <name>DatatypeGeneral</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="5c648b0d-45df-4945-be15-8f9d44644e19">
          <expression>1</expression>
          <name>SampleMode</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>HardThreshold:78</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="5f7f999c-133f-40fa-a87d-6987d66d9b28">
      <blockPath>HardThreshold/Edge Detector/Check Signal Attributes1</blockPath>
      <id>HardThreshold:78:3</id>
      <masks type="slsa.mm.Mask" uuid="6996a7b8-b5fa-40ab-85e2-ecb31e56c24c">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="4f50f8e4-6a7e-4193-877c-c93a3c956eee">
          <expression>2</expression>
          <name>SigAttribCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="4ba8bfd1-91d7-4e84-8284-3b86ee2df2c3">
          <expression>1</expression>
          <name>Complexity</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="db15c1df-715f-424a-81f4-0bb72398a9b8">
          <expression>1</expression>
          <name>DimsCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="6c8cb325-9d27-456f-bc35-a5e53aa3eb70">
          <expression>2</expression>
          <name>DatatypeCheckMethod</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="ac1f15a2-3851-4476-baba-a9c9b2aa4d10">
          <expression>2</expression>
          <name>DatatypeGeneral</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="cc49b0b6-83c2-415a-b1c7-89b0d27c1e9e">
          <expression>1</expression>
          <name>SampleMode</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>HardThreshold:78</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="b483f45a-e54e-4d91-8ff1-5db981a5a6dd">
      <blockPath>HardThreshold/Compare To Constant</blockPath>
      <id>HardThreshold:79</id>
      <masks type="slsa.mm.Mask" uuid="720927b7-dfa7-457c-b7d6-d231cbc2086d">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="c89e4fbd-b141-4a6f-9d9b-818ee3523165">
          <expression>4</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="153eebab-1189-4506-822e-a37346814d32">
          <expression>-250</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <refersToVariables>true</refersToVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="3094e21a-c7ba-4f9f-b140-5b750bf41175">
          <expression>2</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="8fa860de-28ba-4247-8b37-3ea41860819e">
          <expression>1</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="c72f3acc-fe55-4e18-af0f-d731aececac4">
      <blockPath>HardThreshold/Compare To Zero</blockPath>
      <id>HardThreshold:81</id>
      <masks type="slsa.mm.Mask" uuid="d4be66fc-9392-4b02-8c8a-fde29a1f2594">
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="4062a4dd-8e1e-427d-b7ed-60eefa72e6f2">
          <expression>5</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="64a0d0b4-efef-416c-86b5-ad44fd9e4fac">
          <expression>2</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.DialogParameterInfo" uuid="5ad6da09-1900-409b-a41b-42cabdbcf332">
          <expression>1</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
    setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.MaskedBlock" uuid="38a9c06b-dd44-4681-9ba9-803068f6230c">
      <childrenIds>HardThreshold:43</childrenIds>
      <childrenIds>HardThreshold:52</childrenIds>
      <childrenIds>HardThreshold:78</childrenIds>
      <childrenIds>HardThreshold:79</childrenIds>
      <childrenIds>HardThreshold:81</childrenIds>
      <id>root</id>
    </maskedBlocks>
  </slsa.mm.MaskTree>
</MF0>