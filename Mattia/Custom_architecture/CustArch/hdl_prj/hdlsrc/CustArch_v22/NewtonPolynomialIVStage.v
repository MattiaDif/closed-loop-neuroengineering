// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v22\NewtonPolynomialIVStage.v
// Created: 2021-09-20 12:48:51
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: NewtonPolynomialIVStage
// Source Path: CustArch_v22/cust_architecture/process_and_retrieve/spike_detection/LocalMaximaAdaptiveThreshold/RMS_computation/Square 
// Root1/Square Root1_iv/NewtonPolynomialIVStag
// Hierarchy Level: 7
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module NewtonPolynomialIVStage
          (clk,
           reset,
           enb,
           ain,
           mulin,
           adderin,
           xinitinterm);


  input   clk;
  input   reset;
  input   enb;
  input   [39:0] ain;  // ufix40_En40
  input   signed [41:0] mulin;  // sfix42_En38
  input   signed [39:0] adderin;  // sfix40_En36
  output  signed [39:0] xinitinterm;  // sfix40_En36


  wire signed [40:0] mul_cast;  // sfix41_En40
  wire signed [82:0] mul_mul_temp;  // sfix83_En78
  wire signed [81:0] mul_cast_1;  // sfix82_En78
  wire signed [39:0] mulout;  // sfix40_En36
  reg signed [39:0] muloutreg;  // sfix40_En36
  wire signed [39:0] sumout;  // sfix40_En36
  reg signed [39:0] xinitinterm_1;  // sfix40_En36


  assign mul_cast = {1'b0, ain};
  assign mul_mul_temp = mulin * mul_cast;
  assign mul_cast_1 = mul_mul_temp[81:0];
  assign mulout = mul_cast_1[81:42] + $signed({1'b0, mul_cast_1[41]});



  always @(posedge clk or posedge reset)
    begin : mul_reg_process
      if (reset == 1'b1) begin
        muloutreg <= 40'sh0000000000;
      end
      else begin
        if (enb) begin
          muloutreg <= mulout;
        end
      end
    end



  assign sumout = muloutreg + adderin;



  always @(posedge clk or posedge reset)
    begin : xinitinterm_reg_process
      if (reset == 1'b1) begin
        xinitinterm_1 <= 40'sh0000000000;
      end
      else begin
        if (enb) begin
          xinitinterm_1 <= sumout;
        end
      end
    end



  assign xinitinterm = xinitinterm_1;

endmodule  // NewtonPolynomialIVStage

