// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v5\digital_filter.v
// Created: 2021-05-19 18:03:41
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: digital_filter
// Source Path: CustArch_v5/cust_architecture/process_and_retrieve/digital_filter
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module digital_filter
          (clk,
           reset,
           enb,
           current_sample,
           previous_sample,
           Enable,
           filter_output,
           new_previous_sample);


  input   clk;
  input   reset;
  input   enb;
  input   [15:0] current_sample;  // uint16
  input   signed [15:0] previous_sample;  // sfix16_E3
  input   Enable;
  output  [15:0] filter_output;  // uint16
  output  signed [15:0] new_previous_sample;  // sfix16_E3


  wire [15:0] Constant_out1;  // uint16
  wire signed [16:0] Subtract_sub_temp;  // sfix17
  wire signed [16:0] Subtract_1;  // sfix17
  wire signed [16:0] Subtract_2;  // sfix17
  wire signed [15:0] Subtract_out1;  // sfix16_E3
  wire signed [15:0] HP_Butter_1st_out1;  // sfix16_E3
  wire signed [15:0] HP_Butter_1st_out2;  // sfix16_E3
  wire [15:0] Constant1_out1;  // uint16
  wire signed [19:0] Subtract1_add_cast;  // sfix20
  wire signed [19:0] Subtract1_add_temp;  // sfix20
  wire signed [19:0] Subtract1_1;  // sfix20
  wire [15:0] Subtract1_out1;  // uint16
  wire [15:0] Subtract1_out1_bypass;  // uint16
  reg [15:0] Subtract1_out1_last_value;  // uint16
  wire signed [15:0] HP_Butter_1st_out2_bypass;  // sfix16_E3
  reg signed [15:0] HP_Butter_1st_out2_last_value;  // sfix16_E3


  assign Constant_out1 = 16'b1000000000000000;



  assign Subtract_1 = {1'b0, current_sample};
  assign Subtract_2 = {1'b0, Constant_out1};
  assign Subtract_sub_temp = Subtract_1 - Subtract_2;
  assign Subtract_out1 = {{2{Subtract_sub_temp[16]}}, Subtract_sub_temp[16:3]};



  HP_Butter_1st u_HP_Butter_1st (.Input2(Subtract_out1),  // sfix16_E3
                                 .Input1(previous_sample),  // sfix16_E3
                                 .Output_rsvd(HP_Butter_1st_out1),  // sfix16_E3
                                 .Output1(HP_Butter_1st_out2)  // sfix16_E3
                                 );

  assign Constant1_out1 = 16'b1000000000000000;



  assign Subtract1_add_cast = {HP_Butter_1st_out1[15], {HP_Butter_1st_out1, 3'b000}};
  assign Subtract1_1 = {4'b0, Constant1_out1};
  assign Subtract1_add_temp = Subtract1_add_cast + Subtract1_1;
  assign Subtract1_out1 = Subtract1_add_temp[15:0];



  always @(posedge clk or posedge reset)
    begin : filter_output_bypass_process
      if (reset == 1'b1) begin
        Subtract1_out1_last_value <= 16'b0000000000000000;
      end
      else begin
        if (enb) begin
          Subtract1_out1_last_value <= Subtract1_out1_bypass;
        end
      end
    end



  assign Subtract1_out1_bypass = (Enable == 1'b0 ? Subtract1_out1_last_value :
              Subtract1_out1);



  assign filter_output = Subtract1_out1_bypass;

  always @(posedge clk or posedge reset)
    begin : new_previous_sample_bypass_process
      if (reset == 1'b1) begin
        HP_Butter_1st_out2_last_value <= 16'sb0000000000000000;
      end
      else begin
        if (enb) begin
          HP_Butter_1st_out2_last_value <= HP_Butter_1st_out2_bypass;
        end
      end
    end



  assign HP_Butter_1st_out2_bypass = (Enable == 1'b0 ? HP_Butter_1st_out2_last_value :
              HP_Butter_1st_out2);



  assign new_previous_sample = HP_Butter_1st_out2_bypass;

endmodule  // digital_filter

