// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v21\DualPortRAM_generic_block.v
// Created: 2021-10-18 17:44:13
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DualPortRAM_generic_block
// Source Path: CustArch_v21/cust_architecture/process_and_retrieve/DualPortRAM_generic
// Hierarchy Level: 4
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DualPortRAM_generic_block
          (clk,
           enb_1_2_0,
           wr_din,
           wr_addr,
           wr_en,
           rd_addr,
           wr_dout,
           rd_dout);

  parameter AddrWidth = 1;
  parameter DataWidth = 1;

  input   clk;
  input   enb_1_2_0;
  input   [DataWidth - 1:0] wr_din;  // parameterized width
  input   [AddrWidth - 1:0] wr_addr;  // parameterized width
  input   wr_en;  // ufix1
  input   [AddrWidth - 1:0] rd_addr;  // parameterized width
  output  [DataWidth - 1:0] wr_dout;  // parameterized width
  output  [DataWidth - 1:0] rd_dout;  // parameterized width


  reg  [DataWidth - 1:0] ram [2**AddrWidth - 1:0];
  reg  [DataWidth - 1:0] dout_b;
  reg  [DataWidth - 1:0] dout_a;
  integer i;

  initial begin
    for (i=0; i<=2**AddrWidth - 1; i=i+1) begin
      ram[i] = 0;
    end
    dout_b = 0;
    dout_a = 0;
  end


  always @(posedge clk)
    begin : DualPortRAM_generic_process
      if (enb_1_2_0 == 1'b1) begin
        if (wr_en == 1'b1) begin
          ram[wr_addr] <= wr_din;
          dout_a <= wr_din;
        end
        else begin
          dout_a <= ram[wr_addr];
        end
        dout_b <= ram[rd_addr];
      end
    end

  assign rd_dout = dout_b;
  assign wr_dout = dout_a;

endmodule  // DualPortRAM_generic_block

