// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\CustArch_v22\adaptive_th_computation.v
// Created: 2021-09-20 15:43:05
// 
// Generated by MATLAB 9.8 and HDL Coder 3.16
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: adaptive_th_computation
// Source Path: LocalMaximaAdaptiveThreshold/RMS_computation/adaptive_th_computation
// Hierarchy Level: 2
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module adaptive_th_computation
          (u,
           Out1);


  input   [15:0] u;  // uint16
  output  [15:0] Out1;  // uint16


  wire [15:0] Constant2_out1;  // uint16
  wire [15:0] Constant1_out1;  // uint16
  wire [15:0] Constant_out1;  // uint16
  wire Compare_To_Constant_out1;
  wire switch_compare_1;
  wire [15:0] Constant3_out1;  // uint16
  wire [15:0] Add2_out1;  // uint16
  wire [31:0] rms_gain1_cast;  // ufix32_En13
  wire [15:0] rms_gain1_out1;  // uint16
  wire [15:0] Add3_out1;  // uint16
  wire [15:0] Constant4_out1;  // uint16
  wire [15:0] Add_out1;  // uint16
  wire [15:0] Add1_out1;  // uint16
  wire [31:0] rms_gain_cast;  // ufix32_En13
  wire [15:0] rms_gain_out1;  // uint16
  wire [15:0] Add4_out1;  // uint16
  wire [15:0] Switch1_out1;  // uint16


  assign Constant2_out1 = 16'b1000000000000000;



  assign Constant1_out1 = 16'b1000000000000000;



  assign Constant_out1 = 16'b1111111111111111;



  assign Compare_To_Constant_out1 = u > 16'b1000000000000000;



  assign switch_compare_1 = Compare_To_Constant_out1 > 1'b0;



  assign Constant3_out1 = 16'b1000000000000000;



  assign Add2_out1 = Constant2_out1 - u;



  assign rms_gain1_cast = {1'b0, {Add2_out1, 15'b000000000000000}};
  assign rms_gain1_out1 = rms_gain1_cast[28:13];



  assign Add3_out1 = Constant3_out1 - rms_gain1_out1;



  assign Constant4_out1 = 16'b1000000000000000;



  assign Add_out1 = Constant_out1 - u;



  assign Add1_out1 = Constant1_out1 - Add_out1;



  assign rms_gain_cast = {1'b0, {Add1_out1, 15'b000000000000000}};
  assign rms_gain_out1 = rms_gain_cast[28:13];



  assign Add4_out1 = Constant4_out1 - rms_gain_out1;



  assign Switch1_out1 = (switch_compare_1 == 1'b0 ? Add3_out1 :
              Add4_out1);



  assign Out1 = Switch1_out1;

endmodule  // adaptive_th_computation

